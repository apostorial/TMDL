{
  "version": 3,
  "sources": ["../../../../node_modules/sortablejs/modular/sortable.esm.js", "../../../../client/admin-sortable2.ts"],
  "sourcesContent": ["/**!\n * Sortable 1.15.0\n * @author\tRubaXa   <trash@rubaxa.org>\n * @author\towenm    <owen23355@gmail.com>\n * @license MIT\n */\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar version = \"1.15.0\";\n\nfunction userAgent(pattern) {\n  if (typeof window !== 'undefined' && window.navigator) {\n    return !! /*@__PURE__*/navigator.userAgent.match(pattern);\n  }\n}\n\nvar IE11OrLess = userAgent(/(?:Trident.*rv[ :]?11\\.|msie|iemobile|Windows Phone)/i);\nvar Edge = userAgent(/Edge/i);\nvar FireFox = userAgent(/firefox/i);\nvar Safari = userAgent(/safari/i) && !userAgent(/chrome/i) && !userAgent(/android/i);\nvar IOS = userAgent(/iP(ad|od|hone)/i);\nvar ChromeForAndroid = userAgent(/chrome/i) && userAgent(/android/i);\n\nvar captureMode = {\n  capture: false,\n  passive: false\n};\n\nfunction on(el, event, fn) {\n  el.addEventListener(event, fn, !IE11OrLess && captureMode);\n}\n\nfunction off(el, event, fn) {\n  el.removeEventListener(event, fn, !IE11OrLess && captureMode);\n}\n\nfunction matches(\n/**HTMLElement*/\nel,\n/**String*/\nselector) {\n  if (!selector) return;\n  selector[0] === '>' && (selector = selector.substring(1));\n\n  if (el) {\n    try {\n      if (el.matches) {\n        return el.matches(selector);\n      } else if (el.msMatchesSelector) {\n        return el.msMatchesSelector(selector);\n      } else if (el.webkitMatchesSelector) {\n        return el.webkitMatchesSelector(selector);\n      }\n    } catch (_) {\n      return false;\n    }\n  }\n\n  return false;\n}\n\nfunction getParentOrHost(el) {\n  return el.host && el !== document && el.host.nodeType ? el.host : el.parentNode;\n}\n\nfunction closest(\n/**HTMLElement*/\nel,\n/**String*/\nselector,\n/**HTMLElement*/\nctx, includeCTX) {\n  if (el) {\n    ctx = ctx || document;\n\n    do {\n      if (selector != null && (selector[0] === '>' ? el.parentNode === ctx && matches(el, selector) : matches(el, selector)) || includeCTX && el === ctx) {\n        return el;\n      }\n\n      if (el === ctx) break;\n      /* jshint boss:true */\n    } while (el = getParentOrHost(el));\n  }\n\n  return null;\n}\n\nvar R_SPACE = /\\s+/g;\n\nfunction toggleClass(el, name, state) {\n  if (el && name) {\n    if (el.classList) {\n      el.classList[state ? 'add' : 'remove'](name);\n    } else {\n      var className = (' ' + el.className + ' ').replace(R_SPACE, ' ').replace(' ' + name + ' ', ' ');\n      el.className = (className + (state ? ' ' + name : '')).replace(R_SPACE, ' ');\n    }\n  }\n}\n\nfunction css(el, prop, val) {\n  var style = el && el.style;\n\n  if (style) {\n    if (val === void 0) {\n      if (document.defaultView && document.defaultView.getComputedStyle) {\n        val = document.defaultView.getComputedStyle(el, '');\n      } else if (el.currentStyle) {\n        val = el.currentStyle;\n      }\n\n      return prop === void 0 ? val : val[prop];\n    } else {\n      if (!(prop in style) && prop.indexOf('webkit') === -1) {\n        prop = '-webkit-' + prop;\n      }\n\n      style[prop] = val + (typeof val === 'string' ? '' : 'px');\n    }\n  }\n}\n\nfunction matrix(el, selfOnly) {\n  var appliedTransforms = '';\n\n  if (typeof el === 'string') {\n    appliedTransforms = el;\n  } else {\n    do {\n      var transform = css(el, 'transform');\n\n      if (transform && transform !== 'none') {\n        appliedTransforms = transform + ' ' + appliedTransforms;\n      }\n      /* jshint boss:true */\n\n    } while (!selfOnly && (el = el.parentNode));\n  }\n\n  var matrixFn = window.DOMMatrix || window.WebKitCSSMatrix || window.CSSMatrix || window.MSCSSMatrix;\n  /*jshint -W056 */\n\n  return matrixFn && new matrixFn(appliedTransforms);\n}\n\nfunction find(ctx, tagName, iterator) {\n  if (ctx) {\n    var list = ctx.getElementsByTagName(tagName),\n        i = 0,\n        n = list.length;\n\n    if (iterator) {\n      for (; i < n; i++) {\n        iterator(list[i], i);\n      }\n    }\n\n    return list;\n  }\n\n  return [];\n}\n\nfunction getWindowScrollingElement() {\n  var scrollingElement = document.scrollingElement;\n\n  if (scrollingElement) {\n    return scrollingElement;\n  } else {\n    return document.documentElement;\n  }\n}\n/**\n * Returns the \"bounding client rect\" of given element\n * @param  {HTMLElement} el                       The element whose boundingClientRect is wanted\n * @param  {[Boolean]} relativeToContainingBlock  Whether the rect should be relative to the containing block of (including) the container\n * @param  {[Boolean]} relativeToNonStaticParent  Whether the rect should be relative to the relative parent of (including) the contaienr\n * @param  {[Boolean]} undoScale                  Whether the container's scale() should be undone\n * @param  {[HTMLElement]} container              The parent the element will be placed in\n * @return {Object}                               The boundingClientRect of el, with specified adjustments\n */\n\n\nfunction getRect(el, relativeToContainingBlock, relativeToNonStaticParent, undoScale, container) {\n  if (!el.getBoundingClientRect && el !== window) return;\n  var elRect, top, left, bottom, right, height, width;\n\n  if (el !== window && el.parentNode && el !== getWindowScrollingElement()) {\n    elRect = el.getBoundingClientRect();\n    top = elRect.top;\n    left = elRect.left;\n    bottom = elRect.bottom;\n    right = elRect.right;\n    height = elRect.height;\n    width = elRect.width;\n  } else {\n    top = 0;\n    left = 0;\n    bottom = window.innerHeight;\n    right = window.innerWidth;\n    height = window.innerHeight;\n    width = window.innerWidth;\n  }\n\n  if ((relativeToContainingBlock || relativeToNonStaticParent) && el !== window) {\n    // Adjust for translate()\n    container = container || el.parentNode; // solves #1123 (see: https://stackoverflow.com/a/37953806/6088312)\n    // Not needed on <= IE11\n\n    if (!IE11OrLess) {\n      do {\n        if (container && container.getBoundingClientRect && (css(container, 'transform') !== 'none' || relativeToNonStaticParent && css(container, 'position') !== 'static')) {\n          var containerRect = container.getBoundingClientRect(); // Set relative to edges of padding box of container\n\n          top -= containerRect.top + parseInt(css(container, 'border-top-width'));\n          left -= containerRect.left + parseInt(css(container, 'border-left-width'));\n          bottom = top + elRect.height;\n          right = left + elRect.width;\n          break;\n        }\n        /* jshint boss:true */\n\n      } while (container = container.parentNode);\n    }\n  }\n\n  if (undoScale && el !== window) {\n    // Adjust for scale()\n    var elMatrix = matrix(container || el),\n        scaleX = elMatrix && elMatrix.a,\n        scaleY = elMatrix && elMatrix.d;\n\n    if (elMatrix) {\n      top /= scaleY;\n      left /= scaleX;\n      width /= scaleX;\n      height /= scaleY;\n      bottom = top + height;\n      right = left + width;\n    }\n  }\n\n  return {\n    top: top,\n    left: left,\n    bottom: bottom,\n    right: right,\n    width: width,\n    height: height\n  };\n}\n/**\n * Checks if a side of an element is scrolled past a side of its parents\n * @param  {HTMLElement}  el           The element who's side being scrolled out of view is in question\n * @param  {String}       elSide       Side of the element in question ('top', 'left', 'right', 'bottom')\n * @param  {String}       parentSide   Side of the parent in question ('top', 'left', 'right', 'bottom')\n * @return {HTMLElement}               The parent scroll element that the el's side is scrolled past, or null if there is no such element\n */\n\n\nfunction isScrolledPast(el, elSide, parentSide) {\n  var parent = getParentAutoScrollElement(el, true),\n      elSideVal = getRect(el)[elSide];\n  /* jshint boss:true */\n\n  while (parent) {\n    var parentSideVal = getRect(parent)[parentSide],\n        visible = void 0;\n\n    if (parentSide === 'top' || parentSide === 'left') {\n      visible = elSideVal >= parentSideVal;\n    } else {\n      visible = elSideVal <= parentSideVal;\n    }\n\n    if (!visible) return parent;\n    if (parent === getWindowScrollingElement()) break;\n    parent = getParentAutoScrollElement(parent, false);\n  }\n\n  return false;\n}\n/**\n * Gets nth child of el, ignoring hidden children, sortable's elements (does not ignore clone if it's visible)\n * and non-draggable elements\n * @param  {HTMLElement} el       The parent element\n * @param  {Number} childNum      The index of the child\n * @param  {Object} options       Parent Sortable's options\n * @return {HTMLElement}          The child at index childNum, or null if not found\n */\n\n\nfunction getChild(el, childNum, options, includeDragEl) {\n  var currentChild = 0,\n      i = 0,\n      children = el.children;\n\n  while (i < children.length) {\n    if (children[i].style.display !== 'none' && children[i] !== Sortable.ghost && (includeDragEl || children[i] !== Sortable.dragged) && closest(children[i], options.draggable, el, false)) {\n      if (currentChild === childNum) {\n        return children[i];\n      }\n\n      currentChild++;\n    }\n\n    i++;\n  }\n\n  return null;\n}\n/**\n * Gets the last child in the el, ignoring ghostEl or invisible elements (clones)\n * @param  {HTMLElement} el       Parent element\n * @param  {selector} selector    Any other elements that should be ignored\n * @return {HTMLElement}          The last child, ignoring ghostEl\n */\n\n\nfunction lastChild(el, selector) {\n  var last = el.lastElementChild;\n\n  while (last && (last === Sortable.ghost || css(last, 'display') === 'none' || selector && !matches(last, selector))) {\n    last = last.previousElementSibling;\n  }\n\n  return last || null;\n}\n/**\n * Returns the index of an element within its parent for a selected set of\n * elements\n * @param  {HTMLElement} el\n * @param  {selector} selector\n * @return {number}\n */\n\n\nfunction index(el, selector) {\n  var index = 0;\n\n  if (!el || !el.parentNode) {\n    return -1;\n  }\n  /* jshint boss:true */\n\n\n  while (el = el.previousElementSibling) {\n    if (el.nodeName.toUpperCase() !== 'TEMPLATE' && el !== Sortable.clone && (!selector || matches(el, selector))) {\n      index++;\n    }\n  }\n\n  return index;\n}\n/**\n * Returns the scroll offset of the given element, added with all the scroll offsets of parent elements.\n * The value is returned in real pixels.\n * @param  {HTMLElement} el\n * @return {Array}             Offsets in the format of [left, top]\n */\n\n\nfunction getRelativeScrollOffset(el) {\n  var offsetLeft = 0,\n      offsetTop = 0,\n      winScroller = getWindowScrollingElement();\n\n  if (el) {\n    do {\n      var elMatrix = matrix(el),\n          scaleX = elMatrix.a,\n          scaleY = elMatrix.d;\n      offsetLeft += el.scrollLeft * scaleX;\n      offsetTop += el.scrollTop * scaleY;\n    } while (el !== winScroller && (el = el.parentNode));\n  }\n\n  return [offsetLeft, offsetTop];\n}\n/**\n * Returns the index of the object within the given array\n * @param  {Array} arr   Array that may or may not hold the object\n * @param  {Object} obj  An object that has a key-value pair unique to and identical to a key-value pair in the object you want to find\n * @return {Number}      The index of the object in the array, or -1\n */\n\n\nfunction indexOfObject(arr, obj) {\n  for (var i in arr) {\n    if (!arr.hasOwnProperty(i)) continue;\n\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key) && obj[key] === arr[i][key]) return Number(i);\n    }\n  }\n\n  return -1;\n}\n\nfunction getParentAutoScrollElement(el, includeSelf) {\n  // skip to window\n  if (!el || !el.getBoundingClientRect) return getWindowScrollingElement();\n  var elem = el;\n  var gotSelf = false;\n\n  do {\n    // we don't need to get elem css if it isn't even overflowing in the first place (performance)\n    if (elem.clientWidth < elem.scrollWidth || elem.clientHeight < elem.scrollHeight) {\n      var elemCSS = css(elem);\n\n      if (elem.clientWidth < elem.scrollWidth && (elemCSS.overflowX == 'auto' || elemCSS.overflowX == 'scroll') || elem.clientHeight < elem.scrollHeight && (elemCSS.overflowY == 'auto' || elemCSS.overflowY == 'scroll')) {\n        if (!elem.getBoundingClientRect || elem === document.body) return getWindowScrollingElement();\n        if (gotSelf || includeSelf) return elem;\n        gotSelf = true;\n      }\n    }\n    /* jshint boss:true */\n\n  } while (elem = elem.parentNode);\n\n  return getWindowScrollingElement();\n}\n\nfunction extend(dst, src) {\n  if (dst && src) {\n    for (var key in src) {\n      if (src.hasOwnProperty(key)) {\n        dst[key] = src[key];\n      }\n    }\n  }\n\n  return dst;\n}\n\nfunction isRectEqual(rect1, rect2) {\n  return Math.round(rect1.top) === Math.round(rect2.top) && Math.round(rect1.left) === Math.round(rect2.left) && Math.round(rect1.height) === Math.round(rect2.height) && Math.round(rect1.width) === Math.round(rect2.width);\n}\n\nvar _throttleTimeout;\n\nfunction throttle(callback, ms) {\n  return function () {\n    if (!_throttleTimeout) {\n      var args = arguments,\n          _this = this;\n\n      if (args.length === 1) {\n        callback.call(_this, args[0]);\n      } else {\n        callback.apply(_this, args);\n      }\n\n      _throttleTimeout = setTimeout(function () {\n        _throttleTimeout = void 0;\n      }, ms);\n    }\n  };\n}\n\nfunction cancelThrottle() {\n  clearTimeout(_throttleTimeout);\n  _throttleTimeout = void 0;\n}\n\nfunction scrollBy(el, x, y) {\n  el.scrollLeft += x;\n  el.scrollTop += y;\n}\n\nfunction clone(el) {\n  var Polymer = window.Polymer;\n  var $ = window.jQuery || window.Zepto;\n\n  if (Polymer && Polymer.dom) {\n    return Polymer.dom(el).cloneNode(true);\n  } else if ($) {\n    return $(el).clone(true)[0];\n  } else {\n    return el.cloneNode(true);\n  }\n}\n\nfunction setRect(el, rect) {\n  css(el, 'position', 'absolute');\n  css(el, 'top', rect.top);\n  css(el, 'left', rect.left);\n  css(el, 'width', rect.width);\n  css(el, 'height', rect.height);\n}\n\nfunction unsetRect(el) {\n  css(el, 'position', '');\n  css(el, 'top', '');\n  css(el, 'left', '');\n  css(el, 'width', '');\n  css(el, 'height', '');\n}\n\nvar expando = 'Sortable' + new Date().getTime();\n\nfunction AnimationStateManager() {\n  var animationStates = [],\n      animationCallbackId;\n  return {\n    captureAnimationState: function captureAnimationState() {\n      animationStates = [];\n      if (!this.options.animation) return;\n      var children = [].slice.call(this.el.children);\n      children.forEach(function (child) {\n        if (css(child, 'display') === 'none' || child === Sortable.ghost) return;\n        animationStates.push({\n          target: child,\n          rect: getRect(child)\n        });\n\n        var fromRect = _objectSpread2({}, animationStates[animationStates.length - 1].rect); // If animating: compensate for current animation\n\n\n        if (child.thisAnimationDuration) {\n          var childMatrix = matrix(child, true);\n\n          if (childMatrix) {\n            fromRect.top -= childMatrix.f;\n            fromRect.left -= childMatrix.e;\n          }\n        }\n\n        child.fromRect = fromRect;\n      });\n    },\n    addAnimationState: function addAnimationState(state) {\n      animationStates.push(state);\n    },\n    removeAnimationState: function removeAnimationState(target) {\n      animationStates.splice(indexOfObject(animationStates, {\n        target: target\n      }), 1);\n    },\n    animateAll: function animateAll(callback) {\n      var _this = this;\n\n      if (!this.options.animation) {\n        clearTimeout(animationCallbackId);\n        if (typeof callback === 'function') callback();\n        return;\n      }\n\n      var animating = false,\n          animationTime = 0;\n      animationStates.forEach(function (state) {\n        var time = 0,\n            target = state.target,\n            fromRect = target.fromRect,\n            toRect = getRect(target),\n            prevFromRect = target.prevFromRect,\n            prevToRect = target.prevToRect,\n            animatingRect = state.rect,\n            targetMatrix = matrix(target, true);\n\n        if (targetMatrix) {\n          // Compensate for current animation\n          toRect.top -= targetMatrix.f;\n          toRect.left -= targetMatrix.e;\n        }\n\n        target.toRect = toRect;\n\n        if (target.thisAnimationDuration) {\n          // Could also check if animatingRect is between fromRect and toRect\n          if (isRectEqual(prevFromRect, toRect) && !isRectEqual(fromRect, toRect) && // Make sure animatingRect is on line between toRect & fromRect\n          (animatingRect.top - toRect.top) / (animatingRect.left - toRect.left) === (fromRect.top - toRect.top) / (fromRect.left - toRect.left)) {\n            // If returning to same place as started from animation and on same axis\n            time = calculateRealTime(animatingRect, prevFromRect, prevToRect, _this.options);\n          }\n        } // if fromRect != toRect: animate\n\n\n        if (!isRectEqual(toRect, fromRect)) {\n          target.prevFromRect = fromRect;\n          target.prevToRect = toRect;\n\n          if (!time) {\n            time = _this.options.animation;\n          }\n\n          _this.animate(target, animatingRect, toRect, time);\n        }\n\n        if (time) {\n          animating = true;\n          animationTime = Math.max(animationTime, time);\n          clearTimeout(target.animationResetTimer);\n          target.animationResetTimer = setTimeout(function () {\n            target.animationTime = 0;\n            target.prevFromRect = null;\n            target.fromRect = null;\n            target.prevToRect = null;\n            target.thisAnimationDuration = null;\n          }, time);\n          target.thisAnimationDuration = time;\n        }\n      });\n      clearTimeout(animationCallbackId);\n\n      if (!animating) {\n        if (typeof callback === 'function') callback();\n      } else {\n        animationCallbackId = setTimeout(function () {\n          if (typeof callback === 'function') callback();\n        }, animationTime);\n      }\n\n      animationStates = [];\n    },\n    animate: function animate(target, currentRect, toRect, duration) {\n      if (duration) {\n        css(target, 'transition', '');\n        css(target, 'transform', '');\n        var elMatrix = matrix(this.el),\n            scaleX = elMatrix && elMatrix.a,\n            scaleY = elMatrix && elMatrix.d,\n            translateX = (currentRect.left - toRect.left) / (scaleX || 1),\n            translateY = (currentRect.top - toRect.top) / (scaleY || 1);\n        target.animatingX = !!translateX;\n        target.animatingY = !!translateY;\n        css(target, 'transform', 'translate3d(' + translateX + 'px,' + translateY + 'px,0)');\n        this.forRepaintDummy = repaint(target); // repaint\n\n        css(target, 'transition', 'transform ' + duration + 'ms' + (this.options.easing ? ' ' + this.options.easing : ''));\n        css(target, 'transform', 'translate3d(0,0,0)');\n        typeof target.animated === 'number' && clearTimeout(target.animated);\n        target.animated = setTimeout(function () {\n          css(target, 'transition', '');\n          css(target, 'transform', '');\n          target.animated = false;\n          target.animatingX = false;\n          target.animatingY = false;\n        }, duration);\n      }\n    }\n  };\n}\n\nfunction repaint(target) {\n  return target.offsetWidth;\n}\n\nfunction calculateRealTime(animatingRect, fromRect, toRect, options) {\n  return Math.sqrt(Math.pow(fromRect.top - animatingRect.top, 2) + Math.pow(fromRect.left - animatingRect.left, 2)) / Math.sqrt(Math.pow(fromRect.top - toRect.top, 2) + Math.pow(fromRect.left - toRect.left, 2)) * options.animation;\n}\n\nvar plugins = [];\nvar defaults = {\n  initializeByDefault: true\n};\nvar PluginManager = {\n  mount: function mount(plugin) {\n    // Set default static properties\n    for (var option in defaults) {\n      if (defaults.hasOwnProperty(option) && !(option in plugin)) {\n        plugin[option] = defaults[option];\n      }\n    }\n\n    plugins.forEach(function (p) {\n      if (p.pluginName === plugin.pluginName) {\n        throw \"Sortable: Cannot mount plugin \".concat(plugin.pluginName, \" more than once\");\n      }\n    });\n    plugins.push(plugin);\n  },\n  pluginEvent: function pluginEvent(eventName, sortable, evt) {\n    var _this = this;\n\n    this.eventCanceled = false;\n\n    evt.cancel = function () {\n      _this.eventCanceled = true;\n    };\n\n    var eventNameGlobal = eventName + 'Global';\n    plugins.forEach(function (plugin) {\n      if (!sortable[plugin.pluginName]) return; // Fire global events if it exists in this sortable\n\n      if (sortable[plugin.pluginName][eventNameGlobal]) {\n        sortable[plugin.pluginName][eventNameGlobal](_objectSpread2({\n          sortable: sortable\n        }, evt));\n      } // Only fire plugin event if plugin is enabled in this sortable,\n      // and plugin has event defined\n\n\n      if (sortable.options[plugin.pluginName] && sortable[plugin.pluginName][eventName]) {\n        sortable[plugin.pluginName][eventName](_objectSpread2({\n          sortable: sortable\n        }, evt));\n      }\n    });\n  },\n  initializePlugins: function initializePlugins(sortable, el, defaults, options) {\n    plugins.forEach(function (plugin) {\n      var pluginName = plugin.pluginName;\n      if (!sortable.options[pluginName] && !plugin.initializeByDefault) return;\n      var initialized = new plugin(sortable, el, sortable.options);\n      initialized.sortable = sortable;\n      initialized.options = sortable.options;\n      sortable[pluginName] = initialized; // Add default options from plugin\n\n      _extends(defaults, initialized.defaults);\n    });\n\n    for (var option in sortable.options) {\n      if (!sortable.options.hasOwnProperty(option)) continue;\n      var modified = this.modifyOption(sortable, option, sortable.options[option]);\n\n      if (typeof modified !== 'undefined') {\n        sortable.options[option] = modified;\n      }\n    }\n  },\n  getEventProperties: function getEventProperties(name, sortable) {\n    var eventProperties = {};\n    plugins.forEach(function (plugin) {\n      if (typeof plugin.eventProperties !== 'function') return;\n\n      _extends(eventProperties, plugin.eventProperties.call(sortable[plugin.pluginName], name));\n    });\n    return eventProperties;\n  },\n  modifyOption: function modifyOption(sortable, name, value) {\n    var modifiedValue;\n    plugins.forEach(function (plugin) {\n      // Plugin must exist on the Sortable\n      if (!sortable[plugin.pluginName]) return; // If static option listener exists for this option, call in the context of the Sortable's instance of this plugin\n\n      if (plugin.optionListeners && typeof plugin.optionListeners[name] === 'function') {\n        modifiedValue = plugin.optionListeners[name].call(sortable[plugin.pluginName], value);\n      }\n    });\n    return modifiedValue;\n  }\n};\n\nfunction dispatchEvent(_ref) {\n  var sortable = _ref.sortable,\n      rootEl = _ref.rootEl,\n      name = _ref.name,\n      targetEl = _ref.targetEl,\n      cloneEl = _ref.cloneEl,\n      toEl = _ref.toEl,\n      fromEl = _ref.fromEl,\n      oldIndex = _ref.oldIndex,\n      newIndex = _ref.newIndex,\n      oldDraggableIndex = _ref.oldDraggableIndex,\n      newDraggableIndex = _ref.newDraggableIndex,\n      originalEvent = _ref.originalEvent,\n      putSortable = _ref.putSortable,\n      extraEventProperties = _ref.extraEventProperties;\n  sortable = sortable || rootEl && rootEl[expando];\n  if (!sortable) return;\n  var evt,\n      options = sortable.options,\n      onName = 'on' + name.charAt(0).toUpperCase() + name.substr(1); // Support for new CustomEvent feature\n\n  if (window.CustomEvent && !IE11OrLess && !Edge) {\n    evt = new CustomEvent(name, {\n      bubbles: true,\n      cancelable: true\n    });\n  } else {\n    evt = document.createEvent('Event');\n    evt.initEvent(name, true, true);\n  }\n\n  evt.to = toEl || rootEl;\n  evt.from = fromEl || rootEl;\n  evt.item = targetEl || rootEl;\n  evt.clone = cloneEl;\n  evt.oldIndex = oldIndex;\n  evt.newIndex = newIndex;\n  evt.oldDraggableIndex = oldDraggableIndex;\n  evt.newDraggableIndex = newDraggableIndex;\n  evt.originalEvent = originalEvent;\n  evt.pullMode = putSortable ? putSortable.lastPutMode : undefined;\n\n  var allEventProperties = _objectSpread2(_objectSpread2({}, extraEventProperties), PluginManager.getEventProperties(name, sortable));\n\n  for (var option in allEventProperties) {\n    evt[option] = allEventProperties[option];\n  }\n\n  if (rootEl) {\n    rootEl.dispatchEvent(evt);\n  }\n\n  if (options[onName]) {\n    options[onName].call(sortable, evt);\n  }\n}\n\nvar _excluded = [\"evt\"];\n\nvar pluginEvent = function pluginEvent(eventName, sortable) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      originalEvent = _ref.evt,\n      data = _objectWithoutProperties(_ref, _excluded);\n\n  PluginManager.pluginEvent.bind(Sortable)(eventName, sortable, _objectSpread2({\n    dragEl: dragEl,\n    parentEl: parentEl,\n    ghostEl: ghostEl,\n    rootEl: rootEl,\n    nextEl: nextEl,\n    lastDownEl: lastDownEl,\n    cloneEl: cloneEl,\n    cloneHidden: cloneHidden,\n    dragStarted: moved,\n    putSortable: putSortable,\n    activeSortable: Sortable.active,\n    originalEvent: originalEvent,\n    oldIndex: oldIndex,\n    oldDraggableIndex: oldDraggableIndex,\n    newIndex: newIndex,\n    newDraggableIndex: newDraggableIndex,\n    hideGhostForTarget: _hideGhostForTarget,\n    unhideGhostForTarget: _unhideGhostForTarget,\n    cloneNowHidden: function cloneNowHidden() {\n      cloneHidden = true;\n    },\n    cloneNowShown: function cloneNowShown() {\n      cloneHidden = false;\n    },\n    dispatchSortableEvent: function dispatchSortableEvent(name) {\n      _dispatchEvent({\n        sortable: sortable,\n        name: name,\n        originalEvent: originalEvent\n      });\n    }\n  }, data));\n};\n\nfunction _dispatchEvent(info) {\n  dispatchEvent(_objectSpread2({\n    putSortable: putSortable,\n    cloneEl: cloneEl,\n    targetEl: dragEl,\n    rootEl: rootEl,\n    oldIndex: oldIndex,\n    oldDraggableIndex: oldDraggableIndex,\n    newIndex: newIndex,\n    newDraggableIndex: newDraggableIndex\n  }, info));\n}\n\nvar dragEl,\n    parentEl,\n    ghostEl,\n    rootEl,\n    nextEl,\n    lastDownEl,\n    cloneEl,\n    cloneHidden,\n    oldIndex,\n    newIndex,\n    oldDraggableIndex,\n    newDraggableIndex,\n    activeGroup,\n    putSortable,\n    awaitingDragStarted = false,\n    ignoreNextClick = false,\n    sortables = [],\n    tapEvt,\n    touchEvt,\n    lastDx,\n    lastDy,\n    tapDistanceLeft,\n    tapDistanceTop,\n    moved,\n    lastTarget,\n    lastDirection,\n    pastFirstInvertThresh = false,\n    isCircumstantialInvert = false,\n    targetMoveDistance,\n    // For positioning ghost absolutely\nghostRelativeParent,\n    ghostRelativeParentInitialScroll = [],\n    // (left, top)\n_silent = false,\n    savedInputChecked = [];\n/** @const */\n\nvar documentExists = typeof document !== 'undefined',\n    PositionGhostAbsolutely = IOS,\n    CSSFloatProperty = Edge || IE11OrLess ? 'cssFloat' : 'float',\n    // This will not pass for IE9, because IE9 DnD only works on anchors\nsupportDraggable = documentExists && !ChromeForAndroid && !IOS && 'draggable' in document.createElement('div'),\n    supportCssPointerEvents = function () {\n  if (!documentExists) return; // false when <= IE11\n\n  if (IE11OrLess) {\n    return false;\n  }\n\n  var el = document.createElement('x');\n  el.style.cssText = 'pointer-events:auto';\n  return el.style.pointerEvents === 'auto';\n}(),\n    _detectDirection = function _detectDirection(el, options) {\n  var elCSS = css(el),\n      elWidth = parseInt(elCSS.width) - parseInt(elCSS.paddingLeft) - parseInt(elCSS.paddingRight) - parseInt(elCSS.borderLeftWidth) - parseInt(elCSS.borderRightWidth),\n      child1 = getChild(el, 0, options),\n      child2 = getChild(el, 1, options),\n      firstChildCSS = child1 && css(child1),\n      secondChildCSS = child2 && css(child2),\n      firstChildWidth = firstChildCSS && parseInt(firstChildCSS.marginLeft) + parseInt(firstChildCSS.marginRight) + getRect(child1).width,\n      secondChildWidth = secondChildCSS && parseInt(secondChildCSS.marginLeft) + parseInt(secondChildCSS.marginRight) + getRect(child2).width;\n\n  if (elCSS.display === 'flex') {\n    return elCSS.flexDirection === 'column' || elCSS.flexDirection === 'column-reverse' ? 'vertical' : 'horizontal';\n  }\n\n  if (elCSS.display === 'grid') {\n    return elCSS.gridTemplateColumns.split(' ').length <= 1 ? 'vertical' : 'horizontal';\n  }\n\n  if (child1 && firstChildCSS[\"float\"] && firstChildCSS[\"float\"] !== 'none') {\n    var touchingSideChild2 = firstChildCSS[\"float\"] === 'left' ? 'left' : 'right';\n    return child2 && (secondChildCSS.clear === 'both' || secondChildCSS.clear === touchingSideChild2) ? 'vertical' : 'horizontal';\n  }\n\n  return child1 && (firstChildCSS.display === 'block' || firstChildCSS.display === 'flex' || firstChildCSS.display === 'table' || firstChildCSS.display === 'grid' || firstChildWidth >= elWidth && elCSS[CSSFloatProperty] === 'none' || child2 && elCSS[CSSFloatProperty] === 'none' && firstChildWidth + secondChildWidth > elWidth) ? 'vertical' : 'horizontal';\n},\n    _dragElInRowColumn = function _dragElInRowColumn(dragRect, targetRect, vertical) {\n  var dragElS1Opp = vertical ? dragRect.left : dragRect.top,\n      dragElS2Opp = vertical ? dragRect.right : dragRect.bottom,\n      dragElOppLength = vertical ? dragRect.width : dragRect.height,\n      targetS1Opp = vertical ? targetRect.left : targetRect.top,\n      targetS2Opp = vertical ? targetRect.right : targetRect.bottom,\n      targetOppLength = vertical ? targetRect.width : targetRect.height;\n  return dragElS1Opp === targetS1Opp || dragElS2Opp === targetS2Opp || dragElS1Opp + dragElOppLength / 2 === targetS1Opp + targetOppLength / 2;\n},\n\n/**\r\n * Detects first nearest empty sortable to X and Y position using emptyInsertThreshold.\r\n * @param  {Number} x      X position\r\n * @param  {Number} y      Y position\r\n * @return {HTMLElement}   Element of the first found nearest Sortable\r\n */\n_detectNearestEmptySortable = function _detectNearestEmptySortable(x, y) {\n  var ret;\n  sortables.some(function (sortable) {\n    var threshold = sortable[expando].options.emptyInsertThreshold;\n    if (!threshold || lastChild(sortable)) return;\n    var rect = getRect(sortable),\n        insideHorizontally = x >= rect.left - threshold && x <= rect.right + threshold,\n        insideVertically = y >= rect.top - threshold && y <= rect.bottom + threshold;\n\n    if (insideHorizontally && insideVertically) {\n      return ret = sortable;\n    }\n  });\n  return ret;\n},\n    _prepareGroup = function _prepareGroup(options) {\n  function toFn(value, pull) {\n    return function (to, from, dragEl, evt) {\n      var sameGroup = to.options.group.name && from.options.group.name && to.options.group.name === from.options.group.name;\n\n      if (value == null && (pull || sameGroup)) {\n        // Default pull value\n        // Default pull and put value if same group\n        return true;\n      } else if (value == null || value === false) {\n        return false;\n      } else if (pull && value === 'clone') {\n        return value;\n      } else if (typeof value === 'function') {\n        return toFn(value(to, from, dragEl, evt), pull)(to, from, dragEl, evt);\n      } else {\n        var otherGroup = (pull ? to : from).options.group.name;\n        return value === true || typeof value === 'string' && value === otherGroup || value.join && value.indexOf(otherGroup) > -1;\n      }\n    };\n  }\n\n  var group = {};\n  var originalGroup = options.group;\n\n  if (!originalGroup || _typeof(originalGroup) != 'object') {\n    originalGroup = {\n      name: originalGroup\n    };\n  }\n\n  group.name = originalGroup.name;\n  group.checkPull = toFn(originalGroup.pull, true);\n  group.checkPut = toFn(originalGroup.put);\n  group.revertClone = originalGroup.revertClone;\n  options.group = group;\n},\n    _hideGhostForTarget = function _hideGhostForTarget() {\n  if (!supportCssPointerEvents && ghostEl) {\n    css(ghostEl, 'display', 'none');\n  }\n},\n    _unhideGhostForTarget = function _unhideGhostForTarget() {\n  if (!supportCssPointerEvents && ghostEl) {\n    css(ghostEl, 'display', '');\n  }\n}; // #1184 fix - Prevent click event on fallback if dragged but item not changed position\n\n\nif (documentExists && !ChromeForAndroid) {\n  document.addEventListener('click', function (evt) {\n    if (ignoreNextClick) {\n      evt.preventDefault();\n      evt.stopPropagation && evt.stopPropagation();\n      evt.stopImmediatePropagation && evt.stopImmediatePropagation();\n      ignoreNextClick = false;\n      return false;\n    }\n  }, true);\n}\n\nvar nearestEmptyInsertDetectEvent = function nearestEmptyInsertDetectEvent(evt) {\n  if (dragEl) {\n    evt = evt.touches ? evt.touches[0] : evt;\n\n    var nearest = _detectNearestEmptySortable(evt.clientX, evt.clientY);\n\n    if (nearest) {\n      // Create imitation event\n      var event = {};\n\n      for (var i in evt) {\n        if (evt.hasOwnProperty(i)) {\n          event[i] = evt[i];\n        }\n      }\n\n      event.target = event.rootEl = nearest;\n      event.preventDefault = void 0;\n      event.stopPropagation = void 0;\n\n      nearest[expando]._onDragOver(event);\n    }\n  }\n};\n\nvar _checkOutsideTargetEl = function _checkOutsideTargetEl(evt) {\n  if (dragEl) {\n    dragEl.parentNode[expando]._isOutsideThisEl(evt.target);\n  }\n};\n/**\r\n * @class  Sortable\r\n * @param  {HTMLElement}  el\r\n * @param  {Object}       [options]\r\n */\n\n\nfunction Sortable(el, options) {\n  if (!(el && el.nodeType && el.nodeType === 1)) {\n    throw \"Sortable: `el` must be an HTMLElement, not \".concat({}.toString.call(el));\n  }\n\n  this.el = el; // root element\n\n  this.options = options = _extends({}, options); // Export instance\n\n  el[expando] = this;\n  var defaults = {\n    group: null,\n    sort: true,\n    disabled: false,\n    store: null,\n    handle: null,\n    draggable: /^[uo]l$/i.test(el.nodeName) ? '>li' : '>*',\n    swapThreshold: 1,\n    // percentage; 0 <= x <= 1\n    invertSwap: false,\n    // invert always\n    invertedSwapThreshold: null,\n    // will be set to same as swapThreshold if default\n    removeCloneOnHide: true,\n    direction: function direction() {\n      return _detectDirection(el, this.options);\n    },\n    ghostClass: 'sortable-ghost',\n    chosenClass: 'sortable-chosen',\n    dragClass: 'sortable-drag',\n    ignore: 'a, img',\n    filter: null,\n    preventOnFilter: true,\n    animation: 0,\n    easing: null,\n    setData: function setData(dataTransfer, dragEl) {\n      dataTransfer.setData('Text', dragEl.textContent);\n    },\n    dropBubble: false,\n    dragoverBubble: false,\n    dataIdAttr: 'data-id',\n    delay: 0,\n    delayOnTouchOnly: false,\n    touchStartThreshold: (Number.parseInt ? Number : window).parseInt(window.devicePixelRatio, 10) || 1,\n    forceFallback: false,\n    fallbackClass: 'sortable-fallback',\n    fallbackOnBody: false,\n    fallbackTolerance: 0,\n    fallbackOffset: {\n      x: 0,\n      y: 0\n    },\n    supportPointer: Sortable.supportPointer !== false && 'PointerEvent' in window && !Safari,\n    emptyInsertThreshold: 5\n  };\n  PluginManager.initializePlugins(this, el, defaults); // Set default options\n\n  for (var name in defaults) {\n    !(name in options) && (options[name] = defaults[name]);\n  }\n\n  _prepareGroup(options); // Bind all private methods\n\n\n  for (var fn in this) {\n    if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n      this[fn] = this[fn].bind(this);\n    }\n  } // Setup drag mode\n\n\n  this.nativeDraggable = options.forceFallback ? false : supportDraggable;\n\n  if (this.nativeDraggable) {\n    // Touch start threshold cannot be greater than the native dragstart threshold\n    this.options.touchStartThreshold = 1;\n  } // Bind events\n\n\n  if (options.supportPointer) {\n    on(el, 'pointerdown', this._onTapStart);\n  } else {\n    on(el, 'mousedown', this._onTapStart);\n    on(el, 'touchstart', this._onTapStart);\n  }\n\n  if (this.nativeDraggable) {\n    on(el, 'dragover', this);\n    on(el, 'dragenter', this);\n  }\n\n  sortables.push(this.el); // Restore sorting\n\n  options.store && options.store.get && this.sort(options.store.get(this) || []); // Add animation state manager\n\n  _extends(this, AnimationStateManager());\n}\n\nSortable.prototype =\n/** @lends Sortable.prototype */\n{\n  constructor: Sortable,\n  _isOutsideThisEl: function _isOutsideThisEl(target) {\n    if (!this.el.contains(target) && target !== this.el) {\n      lastTarget = null;\n    }\n  },\n  _getDirection: function _getDirection(evt, target) {\n    return typeof this.options.direction === 'function' ? this.options.direction.call(this, evt, target, dragEl) : this.options.direction;\n  },\n  _onTapStart: function _onTapStart(\n  /** Event|TouchEvent */\n  evt) {\n    if (!evt.cancelable) return;\n\n    var _this = this,\n        el = this.el,\n        options = this.options,\n        preventOnFilter = options.preventOnFilter,\n        type = evt.type,\n        touch = evt.touches && evt.touches[0] || evt.pointerType && evt.pointerType === 'touch' && evt,\n        target = (touch || evt).target,\n        originalTarget = evt.target.shadowRoot && (evt.path && evt.path[0] || evt.composedPath && evt.composedPath()[0]) || target,\n        filter = options.filter;\n\n    _saveInputCheckedState(el); // Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.\n\n\n    if (dragEl) {\n      return;\n    }\n\n    if (/mousedown|pointerdown/.test(type) && evt.button !== 0 || options.disabled) {\n      return; // only left button and enabled\n    } // cancel dnd if original target is content editable\n\n\n    if (originalTarget.isContentEditable) {\n      return;\n    } // Safari ignores further event handling after mousedown\n\n\n    if (!this.nativeDraggable && Safari && target && target.tagName.toUpperCase() === 'SELECT') {\n      return;\n    }\n\n    target = closest(target, options.draggable, el, false);\n\n    if (target && target.animated) {\n      return;\n    }\n\n    if (lastDownEl === target) {\n      // Ignoring duplicate `down`\n      return;\n    } // Get the index of the dragged element within its parent\n\n\n    oldIndex = index(target);\n    oldDraggableIndex = index(target, options.draggable); // Check filter\n\n    if (typeof filter === 'function') {\n      if (filter.call(this, evt, target, this)) {\n        _dispatchEvent({\n          sortable: _this,\n          rootEl: originalTarget,\n          name: 'filter',\n          targetEl: target,\n          toEl: el,\n          fromEl: el\n        });\n\n        pluginEvent('filter', _this, {\n          evt: evt\n        });\n        preventOnFilter && evt.cancelable && evt.preventDefault();\n        return; // cancel dnd\n      }\n    } else if (filter) {\n      filter = filter.split(',').some(function (criteria) {\n        criteria = closest(originalTarget, criteria.trim(), el, false);\n\n        if (criteria) {\n          _dispatchEvent({\n            sortable: _this,\n            rootEl: criteria,\n            name: 'filter',\n            targetEl: target,\n            fromEl: el,\n            toEl: el\n          });\n\n          pluginEvent('filter', _this, {\n            evt: evt\n          });\n          return true;\n        }\n      });\n\n      if (filter) {\n        preventOnFilter && evt.cancelable && evt.preventDefault();\n        return; // cancel dnd\n      }\n    }\n\n    if (options.handle && !closest(originalTarget, options.handle, el, false)) {\n      return;\n    } // Prepare `dragstart`\n\n\n    this._prepareDragStart(evt, touch, target);\n  },\n  _prepareDragStart: function _prepareDragStart(\n  /** Event */\n  evt,\n  /** Touch */\n  touch,\n  /** HTMLElement */\n  target) {\n    var _this = this,\n        el = _this.el,\n        options = _this.options,\n        ownerDocument = el.ownerDocument,\n        dragStartFn;\n\n    if (target && !dragEl && target.parentNode === el) {\n      var dragRect = getRect(target);\n      rootEl = el;\n      dragEl = target;\n      parentEl = dragEl.parentNode;\n      nextEl = dragEl.nextSibling;\n      lastDownEl = target;\n      activeGroup = options.group;\n      Sortable.dragged = dragEl;\n      tapEvt = {\n        target: dragEl,\n        clientX: (touch || evt).clientX,\n        clientY: (touch || evt).clientY\n      };\n      tapDistanceLeft = tapEvt.clientX - dragRect.left;\n      tapDistanceTop = tapEvt.clientY - dragRect.top;\n      this._lastX = (touch || evt).clientX;\n      this._lastY = (touch || evt).clientY;\n      dragEl.style['will-change'] = 'all';\n\n      dragStartFn = function dragStartFn() {\n        pluginEvent('delayEnded', _this, {\n          evt: evt\n        });\n\n        if (Sortable.eventCanceled) {\n          _this._onDrop();\n\n          return;\n        } // Delayed drag has been triggered\n        // we can re-enable the events: touchmove/mousemove\n\n\n        _this._disableDelayedDragEvents();\n\n        if (!FireFox && _this.nativeDraggable) {\n          dragEl.draggable = true;\n        } // Bind the events: dragstart/dragend\n\n\n        _this._triggerDragStart(evt, touch); // Drag start event\n\n\n        _dispatchEvent({\n          sortable: _this,\n          name: 'choose',\n          originalEvent: evt\n        }); // Chosen item\n\n\n        toggleClass(dragEl, options.chosenClass, true);\n      }; // Disable \"draggable\"\n\n\n      options.ignore.split(',').forEach(function (criteria) {\n        find(dragEl, criteria.trim(), _disableDraggable);\n      });\n      on(ownerDocument, 'dragover', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'mousemove', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'touchmove', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'mouseup', _this._onDrop);\n      on(ownerDocument, 'touchend', _this._onDrop);\n      on(ownerDocument, 'touchcancel', _this._onDrop); // Make dragEl draggable (must be before delay for FireFox)\n\n      if (FireFox && this.nativeDraggable) {\n        this.options.touchStartThreshold = 4;\n        dragEl.draggable = true;\n      }\n\n      pluginEvent('delayStart', this, {\n        evt: evt\n      }); // Delay is impossible for native DnD in Edge or IE\n\n      if (options.delay && (!options.delayOnTouchOnly || touch) && (!this.nativeDraggable || !(Edge || IE11OrLess))) {\n        if (Sortable.eventCanceled) {\n          this._onDrop();\n\n          return;\n        } // If the user moves the pointer or let go the click or touch\n        // before the delay has been reached:\n        // disable the delayed drag\n\n\n        on(ownerDocument, 'mouseup', _this._disableDelayedDrag);\n        on(ownerDocument, 'touchend', _this._disableDelayedDrag);\n        on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);\n        on(ownerDocument, 'mousemove', _this._delayedDragTouchMoveHandler);\n        on(ownerDocument, 'touchmove', _this._delayedDragTouchMoveHandler);\n        options.supportPointer && on(ownerDocument, 'pointermove', _this._delayedDragTouchMoveHandler);\n        _this._dragStartTimer = setTimeout(dragStartFn, options.delay);\n      } else {\n        dragStartFn();\n      }\n    }\n  },\n  _delayedDragTouchMoveHandler: function _delayedDragTouchMoveHandler(\n  /** TouchEvent|PointerEvent **/\n  e) {\n    var touch = e.touches ? e.touches[0] : e;\n\n    if (Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) >= Math.floor(this.options.touchStartThreshold / (this.nativeDraggable && window.devicePixelRatio || 1))) {\n      this._disableDelayedDrag();\n    }\n  },\n  _disableDelayedDrag: function _disableDelayedDrag() {\n    dragEl && _disableDraggable(dragEl);\n    clearTimeout(this._dragStartTimer);\n\n    this._disableDelayedDragEvents();\n  },\n  _disableDelayedDragEvents: function _disableDelayedDragEvents() {\n    var ownerDocument = this.el.ownerDocument;\n    off(ownerDocument, 'mouseup', this._disableDelayedDrag);\n    off(ownerDocument, 'touchend', this._disableDelayedDrag);\n    off(ownerDocument, 'touchcancel', this._disableDelayedDrag);\n    off(ownerDocument, 'mousemove', this._delayedDragTouchMoveHandler);\n    off(ownerDocument, 'touchmove', this._delayedDragTouchMoveHandler);\n    off(ownerDocument, 'pointermove', this._delayedDragTouchMoveHandler);\n  },\n  _triggerDragStart: function _triggerDragStart(\n  /** Event */\n  evt,\n  /** Touch */\n  touch) {\n    touch = touch || evt.pointerType == 'touch' && evt;\n\n    if (!this.nativeDraggable || touch) {\n      if (this.options.supportPointer) {\n        on(document, 'pointermove', this._onTouchMove);\n      } else if (touch) {\n        on(document, 'touchmove', this._onTouchMove);\n      } else {\n        on(document, 'mousemove', this._onTouchMove);\n      }\n    } else {\n      on(dragEl, 'dragend', this);\n      on(rootEl, 'dragstart', this._onDragStart);\n    }\n\n    try {\n      if (document.selection) {\n        // Timeout neccessary for IE9\n        _nextTick(function () {\n          document.selection.empty();\n        });\n      } else {\n        window.getSelection().removeAllRanges();\n      }\n    } catch (err) {}\n  },\n  _dragStarted: function _dragStarted(fallback, evt) {\n\n    awaitingDragStarted = false;\n\n    if (rootEl && dragEl) {\n      pluginEvent('dragStarted', this, {\n        evt: evt\n      });\n\n      if (this.nativeDraggable) {\n        on(document, 'dragover', _checkOutsideTargetEl);\n      }\n\n      var options = this.options; // Apply effect\n\n      !fallback && toggleClass(dragEl, options.dragClass, false);\n      toggleClass(dragEl, options.ghostClass, true);\n      Sortable.active = this;\n      fallback && this._appendGhost(); // Drag start event\n\n      _dispatchEvent({\n        sortable: this,\n        name: 'start',\n        originalEvent: evt\n      });\n    } else {\n      this._nulling();\n    }\n  },\n  _emulateDragOver: function _emulateDragOver() {\n    if (touchEvt) {\n      this._lastX = touchEvt.clientX;\n      this._lastY = touchEvt.clientY;\n\n      _hideGhostForTarget();\n\n      var target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n      var parent = target;\n\n      while (target && target.shadowRoot) {\n        target = target.shadowRoot.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n        if (target === parent) break;\n        parent = target;\n      }\n\n      dragEl.parentNode[expando]._isOutsideThisEl(target);\n\n      if (parent) {\n        do {\n          if (parent[expando]) {\n            var inserted = void 0;\n            inserted = parent[expando]._onDragOver({\n              clientX: touchEvt.clientX,\n              clientY: touchEvt.clientY,\n              target: target,\n              rootEl: parent\n            });\n\n            if (inserted && !this.options.dragoverBubble) {\n              break;\n            }\n          }\n\n          target = parent; // store last element\n        }\n        /* jshint boss:true */\n        while (parent = parent.parentNode);\n      }\n\n      _unhideGhostForTarget();\n    }\n  },\n  _onTouchMove: function _onTouchMove(\n  /**TouchEvent*/\n  evt) {\n    if (tapEvt) {\n      var options = this.options,\n          fallbackTolerance = options.fallbackTolerance,\n          fallbackOffset = options.fallbackOffset,\n          touch = evt.touches ? evt.touches[0] : evt,\n          ghostMatrix = ghostEl && matrix(ghostEl, true),\n          scaleX = ghostEl && ghostMatrix && ghostMatrix.a,\n          scaleY = ghostEl && ghostMatrix && ghostMatrix.d,\n          relativeScrollOffset = PositionGhostAbsolutely && ghostRelativeParent && getRelativeScrollOffset(ghostRelativeParent),\n          dx = (touch.clientX - tapEvt.clientX + fallbackOffset.x) / (scaleX || 1) + (relativeScrollOffset ? relativeScrollOffset[0] - ghostRelativeParentInitialScroll[0] : 0) / (scaleX || 1),\n          dy = (touch.clientY - tapEvt.clientY + fallbackOffset.y) / (scaleY || 1) + (relativeScrollOffset ? relativeScrollOffset[1] - ghostRelativeParentInitialScroll[1] : 0) / (scaleY || 1); // only set the status to dragging, when we are actually dragging\n\n      if (!Sortable.active && !awaitingDragStarted) {\n        if (fallbackTolerance && Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) < fallbackTolerance) {\n          return;\n        }\n\n        this._onDragStart(evt, true);\n      }\n\n      if (ghostEl) {\n        if (ghostMatrix) {\n          ghostMatrix.e += dx - (lastDx || 0);\n          ghostMatrix.f += dy - (lastDy || 0);\n        } else {\n          ghostMatrix = {\n            a: 1,\n            b: 0,\n            c: 0,\n            d: 1,\n            e: dx,\n            f: dy\n          };\n        }\n\n        var cssMatrix = \"matrix(\".concat(ghostMatrix.a, \",\").concat(ghostMatrix.b, \",\").concat(ghostMatrix.c, \",\").concat(ghostMatrix.d, \",\").concat(ghostMatrix.e, \",\").concat(ghostMatrix.f, \")\");\n        css(ghostEl, 'webkitTransform', cssMatrix);\n        css(ghostEl, 'mozTransform', cssMatrix);\n        css(ghostEl, 'msTransform', cssMatrix);\n        css(ghostEl, 'transform', cssMatrix);\n        lastDx = dx;\n        lastDy = dy;\n        touchEvt = touch;\n      }\n\n      evt.cancelable && evt.preventDefault();\n    }\n  },\n  _appendGhost: function _appendGhost() {\n    // Bug if using scale(): https://stackoverflow.com/questions/2637058\n    // Not being adjusted for\n    if (!ghostEl) {\n      var container = this.options.fallbackOnBody ? document.body : rootEl,\n          rect = getRect(dragEl, true, PositionGhostAbsolutely, true, container),\n          options = this.options; // Position absolutely\n\n      if (PositionGhostAbsolutely) {\n        // Get relatively positioned parent\n        ghostRelativeParent = container;\n\n        while (css(ghostRelativeParent, 'position') === 'static' && css(ghostRelativeParent, 'transform') === 'none' && ghostRelativeParent !== document) {\n          ghostRelativeParent = ghostRelativeParent.parentNode;\n        }\n\n        if (ghostRelativeParent !== document.body && ghostRelativeParent !== document.documentElement) {\n          if (ghostRelativeParent === document) ghostRelativeParent = getWindowScrollingElement();\n          rect.top += ghostRelativeParent.scrollTop;\n          rect.left += ghostRelativeParent.scrollLeft;\n        } else {\n          ghostRelativeParent = getWindowScrollingElement();\n        }\n\n        ghostRelativeParentInitialScroll = getRelativeScrollOffset(ghostRelativeParent);\n      }\n\n      ghostEl = dragEl.cloneNode(true);\n      toggleClass(ghostEl, options.ghostClass, false);\n      toggleClass(ghostEl, options.fallbackClass, true);\n      toggleClass(ghostEl, options.dragClass, true);\n      css(ghostEl, 'transition', '');\n      css(ghostEl, 'transform', '');\n      css(ghostEl, 'box-sizing', 'border-box');\n      css(ghostEl, 'margin', 0);\n      css(ghostEl, 'top', rect.top);\n      css(ghostEl, 'left', rect.left);\n      css(ghostEl, 'width', rect.width);\n      css(ghostEl, 'height', rect.height);\n      css(ghostEl, 'opacity', '0.8');\n      css(ghostEl, 'position', PositionGhostAbsolutely ? 'absolute' : 'fixed');\n      css(ghostEl, 'zIndex', '100000');\n      css(ghostEl, 'pointerEvents', 'none');\n      Sortable.ghost = ghostEl;\n      container.appendChild(ghostEl); // Set transform-origin\n\n      css(ghostEl, 'transform-origin', tapDistanceLeft / parseInt(ghostEl.style.width) * 100 + '% ' + tapDistanceTop / parseInt(ghostEl.style.height) * 100 + '%');\n    }\n  },\n  _onDragStart: function _onDragStart(\n  /**Event*/\n  evt,\n  /**boolean*/\n  fallback) {\n    var _this = this;\n\n    var dataTransfer = evt.dataTransfer;\n    var options = _this.options;\n    pluginEvent('dragStart', this, {\n      evt: evt\n    });\n\n    if (Sortable.eventCanceled) {\n      this._onDrop();\n\n      return;\n    }\n\n    pluginEvent('setupClone', this);\n\n    if (!Sortable.eventCanceled) {\n      cloneEl = clone(dragEl);\n      cloneEl.removeAttribute(\"id\");\n      cloneEl.draggable = false;\n      cloneEl.style['will-change'] = '';\n\n      this._hideClone();\n\n      toggleClass(cloneEl, this.options.chosenClass, false);\n      Sortable.clone = cloneEl;\n    } // #1143: IFrame support workaround\n\n\n    _this.cloneId = _nextTick(function () {\n      pluginEvent('clone', _this);\n      if (Sortable.eventCanceled) return;\n\n      if (!_this.options.removeCloneOnHide) {\n        rootEl.insertBefore(cloneEl, dragEl);\n      }\n\n      _this._hideClone();\n\n      _dispatchEvent({\n        sortable: _this,\n        name: 'clone'\n      });\n    });\n    !fallback && toggleClass(dragEl, options.dragClass, true); // Set proper drop events\n\n    if (fallback) {\n      ignoreNextClick = true;\n      _this._loopId = setInterval(_this._emulateDragOver, 50);\n    } else {\n      // Undo what was set in _prepareDragStart before drag started\n      off(document, 'mouseup', _this._onDrop);\n      off(document, 'touchend', _this._onDrop);\n      off(document, 'touchcancel', _this._onDrop);\n\n      if (dataTransfer) {\n        dataTransfer.effectAllowed = 'move';\n        options.setData && options.setData.call(_this, dataTransfer, dragEl);\n      }\n\n      on(document, 'drop', _this); // #1276 fix:\n\n      css(dragEl, 'transform', 'translateZ(0)');\n    }\n\n    awaitingDragStarted = true;\n    _this._dragStartId = _nextTick(_this._dragStarted.bind(_this, fallback, evt));\n    on(document, 'selectstart', _this);\n    moved = true;\n\n    if (Safari) {\n      css(document.body, 'user-select', 'none');\n    }\n  },\n  // Returns true - if no further action is needed (either inserted or another condition)\n  _onDragOver: function _onDragOver(\n  /**Event*/\n  evt) {\n    var el = this.el,\n        target = evt.target,\n        dragRect,\n        targetRect,\n        revert,\n        options = this.options,\n        group = options.group,\n        activeSortable = Sortable.active,\n        isOwner = activeGroup === group,\n        canSort = options.sort,\n        fromSortable = putSortable || activeSortable,\n        vertical,\n        _this = this,\n        completedFired = false;\n\n    if (_silent) return;\n\n    function dragOverEvent(name, extra) {\n      pluginEvent(name, _this, _objectSpread2({\n        evt: evt,\n        isOwner: isOwner,\n        axis: vertical ? 'vertical' : 'horizontal',\n        revert: revert,\n        dragRect: dragRect,\n        targetRect: targetRect,\n        canSort: canSort,\n        fromSortable: fromSortable,\n        target: target,\n        completed: completed,\n        onMove: function onMove(target, after) {\n          return _onMove(rootEl, el, dragEl, dragRect, target, getRect(target), evt, after);\n        },\n        changed: changed\n      }, extra));\n    } // Capture animation state\n\n\n    function capture() {\n      dragOverEvent('dragOverAnimationCapture');\n\n      _this.captureAnimationState();\n\n      if (_this !== fromSortable) {\n        fromSortable.captureAnimationState();\n      }\n    } // Return invocation when dragEl is inserted (or completed)\n\n\n    function completed(insertion) {\n      dragOverEvent('dragOverCompleted', {\n        insertion: insertion\n      });\n\n      if (insertion) {\n        // Clones must be hidden before folding animation to capture dragRectAbsolute properly\n        if (isOwner) {\n          activeSortable._hideClone();\n        } else {\n          activeSortable._showClone(_this);\n        }\n\n        if (_this !== fromSortable) {\n          // Set ghost class to new sortable's ghost class\n          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : activeSortable.options.ghostClass, false);\n          toggleClass(dragEl, options.ghostClass, true);\n        }\n\n        if (putSortable !== _this && _this !== Sortable.active) {\n          putSortable = _this;\n        } else if (_this === Sortable.active && putSortable) {\n          putSortable = null;\n        } // Animation\n\n\n        if (fromSortable === _this) {\n          _this._ignoreWhileAnimating = target;\n        }\n\n        _this.animateAll(function () {\n          dragOverEvent('dragOverAnimationComplete');\n          _this._ignoreWhileAnimating = null;\n        });\n\n        if (_this !== fromSortable) {\n          fromSortable.animateAll();\n          fromSortable._ignoreWhileAnimating = null;\n        }\n      } // Null lastTarget if it is not inside a previously swapped element\n\n\n      if (target === dragEl && !dragEl.animated || target === el && !target.animated) {\n        lastTarget = null;\n      } // no bubbling and not fallback\n\n\n      if (!options.dragoverBubble && !evt.rootEl && target !== document) {\n        dragEl.parentNode[expando]._isOutsideThisEl(evt.target); // Do not detect for empty insert if already inserted\n\n\n        !insertion && nearestEmptyInsertDetectEvent(evt);\n      }\n\n      !options.dragoverBubble && evt.stopPropagation && evt.stopPropagation();\n      return completedFired = true;\n    } // Call when dragEl has been inserted\n\n\n    function changed() {\n      newIndex = index(dragEl);\n      newDraggableIndex = index(dragEl, options.draggable);\n\n      _dispatchEvent({\n        sortable: _this,\n        name: 'change',\n        toEl: el,\n        newIndex: newIndex,\n        newDraggableIndex: newDraggableIndex,\n        originalEvent: evt\n      });\n    }\n\n    if (evt.preventDefault !== void 0) {\n      evt.cancelable && evt.preventDefault();\n    }\n\n    target = closest(target, options.draggable, el, true);\n    dragOverEvent('dragOver');\n    if (Sortable.eventCanceled) return completedFired;\n\n    if (dragEl.contains(evt.target) || target.animated && target.animatingX && target.animatingY || _this._ignoreWhileAnimating === target) {\n      return completed(false);\n    }\n\n    ignoreNextClick = false;\n\n    if (activeSortable && !options.disabled && (isOwner ? canSort || (revert = parentEl !== rootEl) // Reverting item into the original list\n    : putSortable === this || (this.lastPutMode = activeGroup.checkPull(this, activeSortable, dragEl, evt)) && group.checkPut(this, activeSortable, dragEl, evt))) {\n      vertical = this._getDirection(evt, target) === 'vertical';\n      dragRect = getRect(dragEl);\n      dragOverEvent('dragOverValid');\n      if (Sortable.eventCanceled) return completedFired;\n\n      if (revert) {\n        parentEl = rootEl; // actualization\n\n        capture();\n\n        this._hideClone();\n\n        dragOverEvent('revert');\n\n        if (!Sortable.eventCanceled) {\n          if (nextEl) {\n            rootEl.insertBefore(dragEl, nextEl);\n          } else {\n            rootEl.appendChild(dragEl);\n          }\n        }\n\n        return completed(true);\n      }\n\n      var elLastChild = lastChild(el, options.draggable);\n\n      if (!elLastChild || _ghostIsLast(evt, vertical, this) && !elLastChild.animated) {\n        // Insert to end of list\n        // If already at end of list: Do not insert\n        if (elLastChild === dragEl) {\n          return completed(false);\n        } // if there is a last element, it is the target\n\n\n        if (elLastChild && el === evt.target) {\n          target = elLastChild;\n        }\n\n        if (target) {\n          targetRect = getRect(target);\n        }\n\n        if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, !!target) !== false) {\n          capture();\n\n          if (elLastChild && elLastChild.nextSibling) {\n            // the last draggable element is not the last node\n            el.insertBefore(dragEl, elLastChild.nextSibling);\n          } else {\n            el.appendChild(dragEl);\n          }\n\n          parentEl = el; // actualization\n\n          changed();\n          return completed(true);\n        }\n      } else if (elLastChild && _ghostIsFirst(evt, vertical, this)) {\n        // Insert to start of list\n        var firstChild = getChild(el, 0, options, true);\n\n        if (firstChild === dragEl) {\n          return completed(false);\n        }\n\n        target = firstChild;\n        targetRect = getRect(target);\n\n        if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, false) !== false) {\n          capture();\n          el.insertBefore(dragEl, firstChild);\n          parentEl = el; // actualization\n\n          changed();\n          return completed(true);\n        }\n      } else if (target.parentNode === el) {\n        targetRect = getRect(target);\n        var direction = 0,\n            targetBeforeFirstSwap,\n            differentLevel = dragEl.parentNode !== el,\n            differentRowCol = !_dragElInRowColumn(dragEl.animated && dragEl.toRect || dragRect, target.animated && target.toRect || targetRect, vertical),\n            side1 = vertical ? 'top' : 'left',\n            scrolledPastTop = isScrolledPast(target, 'top', 'top') || isScrolledPast(dragEl, 'top', 'top'),\n            scrollBefore = scrolledPastTop ? scrolledPastTop.scrollTop : void 0;\n\n        if (lastTarget !== target) {\n          targetBeforeFirstSwap = targetRect[side1];\n          pastFirstInvertThresh = false;\n          isCircumstantialInvert = !differentRowCol && options.invertSwap || differentLevel;\n        }\n\n        direction = _getSwapDirection(evt, target, targetRect, vertical, differentRowCol ? 1 : options.swapThreshold, options.invertedSwapThreshold == null ? options.swapThreshold : options.invertedSwapThreshold, isCircumstantialInvert, lastTarget === target);\n        var sibling;\n\n        if (direction !== 0) {\n          // Check if target is beside dragEl in respective direction (ignoring hidden elements)\n          var dragIndex = index(dragEl);\n\n          do {\n            dragIndex -= direction;\n            sibling = parentEl.children[dragIndex];\n          } while (sibling && (css(sibling, 'display') === 'none' || sibling === ghostEl));\n        } // If dragEl is already beside target: Do not insert\n\n\n        if (direction === 0 || sibling === target) {\n          return completed(false);\n        }\n\n        lastTarget = target;\n        lastDirection = direction;\n        var nextSibling = target.nextElementSibling,\n            after = false;\n        after = direction === 1;\n\n        var moveVector = _onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);\n\n        if (moveVector !== false) {\n          if (moveVector === 1 || moveVector === -1) {\n            after = moveVector === 1;\n          }\n\n          _silent = true;\n          setTimeout(_unsilent, 30);\n          capture();\n\n          if (after && !nextSibling) {\n            el.appendChild(dragEl);\n          } else {\n            target.parentNode.insertBefore(dragEl, after ? nextSibling : target);\n          } // Undo chrome's scroll adjustment (has no effect on other browsers)\n\n\n          if (scrolledPastTop) {\n            scrollBy(scrolledPastTop, 0, scrollBefore - scrolledPastTop.scrollTop);\n          }\n\n          parentEl = dragEl.parentNode; // actualization\n          // must be done before animation\n\n          if (targetBeforeFirstSwap !== undefined && !isCircumstantialInvert) {\n            targetMoveDistance = Math.abs(targetBeforeFirstSwap - getRect(target)[side1]);\n          }\n\n          changed();\n          return completed(true);\n        }\n      }\n\n      if (el.contains(dragEl)) {\n        return completed(false);\n      }\n    }\n\n    return false;\n  },\n  _ignoreWhileAnimating: null,\n  _offMoveEvents: function _offMoveEvents() {\n    off(document, 'mousemove', this._onTouchMove);\n    off(document, 'touchmove', this._onTouchMove);\n    off(document, 'pointermove', this._onTouchMove);\n    off(document, 'dragover', nearestEmptyInsertDetectEvent);\n    off(document, 'mousemove', nearestEmptyInsertDetectEvent);\n    off(document, 'touchmove', nearestEmptyInsertDetectEvent);\n  },\n  _offUpEvents: function _offUpEvents() {\n    var ownerDocument = this.el.ownerDocument;\n    off(ownerDocument, 'mouseup', this._onDrop);\n    off(ownerDocument, 'touchend', this._onDrop);\n    off(ownerDocument, 'pointerup', this._onDrop);\n    off(ownerDocument, 'touchcancel', this._onDrop);\n    off(document, 'selectstart', this);\n  },\n  _onDrop: function _onDrop(\n  /**Event*/\n  evt) {\n    var el = this.el,\n        options = this.options; // Get the index of the dragged element within its parent\n\n    newIndex = index(dragEl);\n    newDraggableIndex = index(dragEl, options.draggable);\n    pluginEvent('drop', this, {\n      evt: evt\n    });\n    parentEl = dragEl && dragEl.parentNode; // Get again after plugin event\n\n    newIndex = index(dragEl);\n    newDraggableIndex = index(dragEl, options.draggable);\n\n    if (Sortable.eventCanceled) {\n      this._nulling();\n\n      return;\n    }\n\n    awaitingDragStarted = false;\n    isCircumstantialInvert = false;\n    pastFirstInvertThresh = false;\n    clearInterval(this._loopId);\n    clearTimeout(this._dragStartTimer);\n\n    _cancelNextTick(this.cloneId);\n\n    _cancelNextTick(this._dragStartId); // Unbind events\n\n\n    if (this.nativeDraggable) {\n      off(document, 'drop', this);\n      off(el, 'dragstart', this._onDragStart);\n    }\n\n    this._offMoveEvents();\n\n    this._offUpEvents();\n\n    if (Safari) {\n      css(document.body, 'user-select', '');\n    }\n\n    css(dragEl, 'transform', '');\n\n    if (evt) {\n      if (moved) {\n        evt.cancelable && evt.preventDefault();\n        !options.dropBubble && evt.stopPropagation();\n      }\n\n      ghostEl && ghostEl.parentNode && ghostEl.parentNode.removeChild(ghostEl);\n\n      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {\n        // Remove clone(s)\n        cloneEl && cloneEl.parentNode && cloneEl.parentNode.removeChild(cloneEl);\n      }\n\n      if (dragEl) {\n        if (this.nativeDraggable) {\n          off(dragEl, 'dragend', this);\n        }\n\n        _disableDraggable(dragEl);\n\n        dragEl.style['will-change'] = ''; // Remove classes\n        // ghostClass is added in dragStarted\n\n        if (moved && !awaitingDragStarted) {\n          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : this.options.ghostClass, false);\n        }\n\n        toggleClass(dragEl, this.options.chosenClass, false); // Drag stop event\n\n        _dispatchEvent({\n          sortable: this,\n          name: 'unchoose',\n          toEl: parentEl,\n          newIndex: null,\n          newDraggableIndex: null,\n          originalEvent: evt\n        });\n\n        if (rootEl !== parentEl) {\n          if (newIndex >= 0) {\n            // Add event\n            _dispatchEvent({\n              rootEl: parentEl,\n              name: 'add',\n              toEl: parentEl,\n              fromEl: rootEl,\n              originalEvent: evt\n            }); // Remove event\n\n\n            _dispatchEvent({\n              sortable: this,\n              name: 'remove',\n              toEl: parentEl,\n              originalEvent: evt\n            }); // drag from one list and drop into another\n\n\n            _dispatchEvent({\n              rootEl: parentEl,\n              name: 'sort',\n              toEl: parentEl,\n              fromEl: rootEl,\n              originalEvent: evt\n            });\n\n            _dispatchEvent({\n              sortable: this,\n              name: 'sort',\n              toEl: parentEl,\n              originalEvent: evt\n            });\n          }\n\n          putSortable && putSortable.save();\n        } else {\n          if (newIndex !== oldIndex) {\n            if (newIndex >= 0) {\n              // drag & drop within the same list\n              _dispatchEvent({\n                sortable: this,\n                name: 'update',\n                toEl: parentEl,\n                originalEvent: evt\n              });\n\n              _dispatchEvent({\n                sortable: this,\n                name: 'sort',\n                toEl: parentEl,\n                originalEvent: evt\n              });\n            }\n          }\n        }\n\n        if (Sortable.active) {\n          /* jshint eqnull:true */\n          if (newIndex == null || newIndex === -1) {\n            newIndex = oldIndex;\n            newDraggableIndex = oldDraggableIndex;\n          }\n\n          _dispatchEvent({\n            sortable: this,\n            name: 'end',\n            toEl: parentEl,\n            originalEvent: evt\n          }); // Save sorting\n\n\n          this.save();\n        }\n      }\n    }\n\n    this._nulling();\n  },\n  _nulling: function _nulling() {\n    pluginEvent('nulling', this);\n    rootEl = dragEl = parentEl = ghostEl = nextEl = cloneEl = lastDownEl = cloneHidden = tapEvt = touchEvt = moved = newIndex = newDraggableIndex = oldIndex = oldDraggableIndex = lastTarget = lastDirection = putSortable = activeGroup = Sortable.dragged = Sortable.ghost = Sortable.clone = Sortable.active = null;\n    savedInputChecked.forEach(function (el) {\n      el.checked = true;\n    });\n    savedInputChecked.length = lastDx = lastDy = 0;\n  },\n  handleEvent: function handleEvent(\n  /**Event*/\n  evt) {\n    switch (evt.type) {\n      case 'drop':\n      case 'dragend':\n        this._onDrop(evt);\n\n        break;\n\n      case 'dragenter':\n      case 'dragover':\n        if (dragEl) {\n          this._onDragOver(evt);\n\n          _globalDragOver(evt);\n        }\n\n        break;\n\n      case 'selectstart':\n        evt.preventDefault();\n        break;\n    }\n  },\n\n  /**\r\n   * Serializes the item into an array of string.\r\n   * @returns {String[]}\r\n   */\n  toArray: function toArray() {\n    var order = [],\n        el,\n        children = this.el.children,\n        i = 0,\n        n = children.length,\n        options = this.options;\n\n    for (; i < n; i++) {\n      el = children[i];\n\n      if (closest(el, options.draggable, this.el, false)) {\n        order.push(el.getAttribute(options.dataIdAttr) || _generateId(el));\n      }\n    }\n\n    return order;\n  },\n\n  /**\r\n   * Sorts the elements according to the array.\r\n   * @param  {String[]}  order  order of the items\r\n   */\n  sort: function sort(order, useAnimation) {\n    var items = {},\n        rootEl = this.el;\n    this.toArray().forEach(function (id, i) {\n      var el = rootEl.children[i];\n\n      if (closest(el, this.options.draggable, rootEl, false)) {\n        items[id] = el;\n      }\n    }, this);\n    useAnimation && this.captureAnimationState();\n    order.forEach(function (id) {\n      if (items[id]) {\n        rootEl.removeChild(items[id]);\n        rootEl.appendChild(items[id]);\n      }\n    });\n    useAnimation && this.animateAll();\n  },\n\n  /**\r\n   * Save the current sorting\r\n   */\n  save: function save() {\n    var store = this.options.store;\n    store && store.set && store.set(this);\n  },\n\n  /**\r\n   * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\r\n   * @param   {HTMLElement}  el\r\n   * @param   {String}       [selector]  default: `options.draggable`\r\n   * @returns {HTMLElement|null}\r\n   */\n  closest: function closest$1(el, selector) {\n    return closest(el, selector || this.options.draggable, this.el, false);\n  },\n\n  /**\r\n   * Set/get option\r\n   * @param   {string} name\r\n   * @param   {*}      [value]\r\n   * @returns {*}\r\n   */\n  option: function option(name, value) {\n    var options = this.options;\n\n    if (value === void 0) {\n      return options[name];\n    } else {\n      var modifiedValue = PluginManager.modifyOption(this, name, value);\n\n      if (typeof modifiedValue !== 'undefined') {\n        options[name] = modifiedValue;\n      } else {\n        options[name] = value;\n      }\n\n      if (name === 'group') {\n        _prepareGroup(options);\n      }\n    }\n  },\n\n  /**\r\n   * Destroy\r\n   */\n  destroy: function destroy() {\n    pluginEvent('destroy', this);\n    var el = this.el;\n    el[expando] = null;\n    off(el, 'mousedown', this._onTapStart);\n    off(el, 'touchstart', this._onTapStart);\n    off(el, 'pointerdown', this._onTapStart);\n\n    if (this.nativeDraggable) {\n      off(el, 'dragover', this);\n      off(el, 'dragenter', this);\n    } // Remove draggable attributes\n\n\n    Array.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\n      el.removeAttribute('draggable');\n    });\n\n    this._onDrop();\n\n    this._disableDelayedDragEvents();\n\n    sortables.splice(sortables.indexOf(this.el), 1);\n    this.el = el = null;\n  },\n  _hideClone: function _hideClone() {\n    if (!cloneHidden) {\n      pluginEvent('hideClone', this);\n      if (Sortable.eventCanceled) return;\n      css(cloneEl, 'display', 'none');\n\n      if (this.options.removeCloneOnHide && cloneEl.parentNode) {\n        cloneEl.parentNode.removeChild(cloneEl);\n      }\n\n      cloneHidden = true;\n    }\n  },\n  _showClone: function _showClone(putSortable) {\n    if (putSortable.lastPutMode !== 'clone') {\n      this._hideClone();\n\n      return;\n    }\n\n    if (cloneHidden) {\n      pluginEvent('showClone', this);\n      if (Sortable.eventCanceled) return; // show clone at dragEl or original position\n\n      if (dragEl.parentNode == rootEl && !this.options.group.revertClone) {\n        rootEl.insertBefore(cloneEl, dragEl);\n      } else if (nextEl) {\n        rootEl.insertBefore(cloneEl, nextEl);\n      } else {\n        rootEl.appendChild(cloneEl);\n      }\n\n      if (this.options.group.revertClone) {\n        this.animate(dragEl, cloneEl);\n      }\n\n      css(cloneEl, 'display', '');\n      cloneHidden = false;\n    }\n  }\n};\n\nfunction _globalDragOver(\n/**Event*/\nevt) {\n  if (evt.dataTransfer) {\n    evt.dataTransfer.dropEffect = 'move';\n  }\n\n  evt.cancelable && evt.preventDefault();\n}\n\nfunction _onMove(fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvent, willInsertAfter) {\n  var evt,\n      sortable = fromEl[expando],\n      onMoveFn = sortable.options.onMove,\n      retVal; // Support for new CustomEvent feature\n\n  if (window.CustomEvent && !IE11OrLess && !Edge) {\n    evt = new CustomEvent('move', {\n      bubbles: true,\n      cancelable: true\n    });\n  } else {\n    evt = document.createEvent('Event');\n    evt.initEvent('move', true, true);\n  }\n\n  evt.to = toEl;\n  evt.from = fromEl;\n  evt.dragged = dragEl;\n  evt.draggedRect = dragRect;\n  evt.related = targetEl || toEl;\n  evt.relatedRect = targetRect || getRect(toEl);\n  evt.willInsertAfter = willInsertAfter;\n  evt.originalEvent = originalEvent;\n  fromEl.dispatchEvent(evt);\n\n  if (onMoveFn) {\n    retVal = onMoveFn.call(sortable, evt, originalEvent);\n  }\n\n  return retVal;\n}\n\nfunction _disableDraggable(el) {\n  el.draggable = false;\n}\n\nfunction _unsilent() {\n  _silent = false;\n}\n\nfunction _ghostIsFirst(evt, vertical, sortable) {\n  var rect = getRect(getChild(sortable.el, 0, sortable.options, true));\n  var spacer = 10;\n  return vertical ? evt.clientX < rect.left - spacer || evt.clientY < rect.top && evt.clientX < rect.right : evt.clientY < rect.top - spacer || evt.clientY < rect.bottom && evt.clientX < rect.left;\n}\n\nfunction _ghostIsLast(evt, vertical, sortable) {\n  var rect = getRect(lastChild(sortable.el, sortable.options.draggable));\n  var spacer = 10;\n  return vertical ? evt.clientX > rect.right + spacer || evt.clientX <= rect.right && evt.clientY > rect.bottom && evt.clientX >= rect.left : evt.clientX > rect.right && evt.clientY > rect.top || evt.clientX <= rect.right && evt.clientY > rect.bottom + spacer;\n}\n\nfunction _getSwapDirection(evt, target, targetRect, vertical, swapThreshold, invertedSwapThreshold, invertSwap, isLastTarget) {\n  var mouseOnAxis = vertical ? evt.clientY : evt.clientX,\n      targetLength = vertical ? targetRect.height : targetRect.width,\n      targetS1 = vertical ? targetRect.top : targetRect.left,\n      targetS2 = vertical ? targetRect.bottom : targetRect.right,\n      invert = false;\n\n  if (!invertSwap) {\n    // Never invert or create dragEl shadow when target movemenet causes mouse to move past the end of regular swapThreshold\n    if (isLastTarget && targetMoveDistance < targetLength * swapThreshold) {\n      // multiplied only by swapThreshold because mouse will already be inside target by (1 - threshold) * targetLength / 2\n      // check if past first invert threshold on side opposite of lastDirection\n      if (!pastFirstInvertThresh && (lastDirection === 1 ? mouseOnAxis > targetS1 + targetLength * invertedSwapThreshold / 2 : mouseOnAxis < targetS2 - targetLength * invertedSwapThreshold / 2)) {\n        // past first invert threshold, do not restrict inverted threshold to dragEl shadow\n        pastFirstInvertThresh = true;\n      }\n\n      if (!pastFirstInvertThresh) {\n        // dragEl shadow (target move distance shadow)\n        if (lastDirection === 1 ? mouseOnAxis < targetS1 + targetMoveDistance // over dragEl shadow\n        : mouseOnAxis > targetS2 - targetMoveDistance) {\n          return -lastDirection;\n        }\n      } else {\n        invert = true;\n      }\n    } else {\n      // Regular\n      if (mouseOnAxis > targetS1 + targetLength * (1 - swapThreshold) / 2 && mouseOnAxis < targetS2 - targetLength * (1 - swapThreshold) / 2) {\n        return _getInsertDirection(target);\n      }\n    }\n  }\n\n  invert = invert || invertSwap;\n\n  if (invert) {\n    // Invert of regular\n    if (mouseOnAxis < targetS1 + targetLength * invertedSwapThreshold / 2 || mouseOnAxis > targetS2 - targetLength * invertedSwapThreshold / 2) {\n      return mouseOnAxis > targetS1 + targetLength / 2 ? 1 : -1;\n    }\n  }\n\n  return 0;\n}\n/**\r\n * Gets the direction dragEl must be swapped relative to target in order to make it\r\n * seem that dragEl has been \"inserted\" into that element's position\r\n * @param  {HTMLElement} target       The target whose position dragEl is being inserted at\r\n * @return {Number}                   Direction dragEl must be swapped\r\n */\n\n\nfunction _getInsertDirection(target) {\n  if (index(dragEl) < index(target)) {\n    return 1;\n  } else {\n    return -1;\n  }\n}\n/**\r\n * Generate id\r\n * @param   {HTMLElement} el\r\n * @returns {String}\r\n * @private\r\n */\n\n\nfunction _generateId(el) {\n  var str = el.tagName + el.className + el.src + el.href + el.textContent,\n      i = str.length,\n      sum = 0;\n\n  while (i--) {\n    sum += str.charCodeAt(i);\n  }\n\n  return sum.toString(36);\n}\n\nfunction _saveInputCheckedState(root) {\n  savedInputChecked.length = 0;\n  var inputs = root.getElementsByTagName('input');\n  var idx = inputs.length;\n\n  while (idx--) {\n    var el = inputs[idx];\n    el.checked && savedInputChecked.push(el);\n  }\n}\n\nfunction _nextTick(fn) {\n  return setTimeout(fn, 0);\n}\n\nfunction _cancelNextTick(id) {\n  return clearTimeout(id);\n} // Fixed #973:\n\n\nif (documentExists) {\n  on(document, 'touchmove', function (evt) {\n    if ((Sortable.active || awaitingDragStarted) && evt.cancelable) {\n      evt.preventDefault();\n    }\n  });\n} // Export utils\n\n\nSortable.utils = {\n  on: on,\n  off: off,\n  css: css,\n  find: find,\n  is: function is(el, selector) {\n    return !!closest(el, selector, el, false);\n  },\n  extend: extend,\n  throttle: throttle,\n  closest: closest,\n  toggleClass: toggleClass,\n  clone: clone,\n  index: index,\n  nextTick: _nextTick,\n  cancelNextTick: _cancelNextTick,\n  detectDirection: _detectDirection,\n  getChild: getChild\n};\n/**\r\n * Get the Sortable instance of an element\r\n * @param  {HTMLElement} element The element\r\n * @return {Sortable|undefined}         The instance of Sortable\r\n */\n\nSortable.get = function (element) {\n  return element[expando];\n};\n/**\r\n * Mount a plugin to Sortable\r\n * @param  {...SortablePlugin|SortablePlugin[]} plugins       Plugins being mounted\r\n */\n\n\nSortable.mount = function () {\n  for (var _len = arguments.length, plugins = new Array(_len), _key = 0; _key < _len; _key++) {\n    plugins[_key] = arguments[_key];\n  }\n\n  if (plugins[0].constructor === Array) plugins = plugins[0];\n  plugins.forEach(function (plugin) {\n    if (!plugin.prototype || !plugin.prototype.constructor) {\n      throw \"Sortable: Mounted plugin must be a constructor function, not \".concat({}.toString.call(plugin));\n    }\n\n    if (plugin.utils) Sortable.utils = _objectSpread2(_objectSpread2({}, Sortable.utils), plugin.utils);\n    PluginManager.mount(plugin);\n  });\n};\n/**\r\n * Create sortable instance\r\n * @param {HTMLElement}  el\r\n * @param {Object}      [options]\r\n */\n\n\nSortable.create = function (el, options) {\n  return new Sortable(el, options);\n}; // Export\n\n\nSortable.version = version;\n\nvar autoScrolls = [],\n    scrollEl,\n    scrollRootEl,\n    scrolling = false,\n    lastAutoScrollX,\n    lastAutoScrollY,\n    touchEvt$1,\n    pointerElemChangedInterval;\n\nfunction AutoScrollPlugin() {\n  function AutoScroll() {\n    this.defaults = {\n      scroll: true,\n      forceAutoScrollFallback: false,\n      scrollSensitivity: 30,\n      scrollSpeed: 10,\n      bubbleScroll: true\n    }; // Bind all private methods\n\n    for (var fn in this) {\n      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n        this[fn] = this[fn].bind(this);\n      }\n    }\n  }\n\n  AutoScroll.prototype = {\n    dragStarted: function dragStarted(_ref) {\n      var originalEvent = _ref.originalEvent;\n\n      if (this.sortable.nativeDraggable) {\n        on(document, 'dragover', this._handleAutoScroll);\n      } else {\n        if (this.options.supportPointer) {\n          on(document, 'pointermove', this._handleFallbackAutoScroll);\n        } else if (originalEvent.touches) {\n          on(document, 'touchmove', this._handleFallbackAutoScroll);\n        } else {\n          on(document, 'mousemove', this._handleFallbackAutoScroll);\n        }\n      }\n    },\n    dragOverCompleted: function dragOverCompleted(_ref2) {\n      var originalEvent = _ref2.originalEvent;\n\n      // For when bubbling is canceled and using fallback (fallback 'touchmove' always reached)\n      if (!this.options.dragOverBubble && !originalEvent.rootEl) {\n        this._handleAutoScroll(originalEvent);\n      }\n    },\n    drop: function drop() {\n      if (this.sortable.nativeDraggable) {\n        off(document, 'dragover', this._handleAutoScroll);\n      } else {\n        off(document, 'pointermove', this._handleFallbackAutoScroll);\n        off(document, 'touchmove', this._handleFallbackAutoScroll);\n        off(document, 'mousemove', this._handleFallbackAutoScroll);\n      }\n\n      clearPointerElemChangedInterval();\n      clearAutoScrolls();\n      cancelThrottle();\n    },\n    nulling: function nulling() {\n      touchEvt$1 = scrollRootEl = scrollEl = scrolling = pointerElemChangedInterval = lastAutoScrollX = lastAutoScrollY = null;\n      autoScrolls.length = 0;\n    },\n    _handleFallbackAutoScroll: function _handleFallbackAutoScroll(evt) {\n      this._handleAutoScroll(evt, true);\n    },\n    _handleAutoScroll: function _handleAutoScroll(evt, fallback) {\n      var _this = this;\n\n      var x = (evt.touches ? evt.touches[0] : evt).clientX,\n          y = (evt.touches ? evt.touches[0] : evt).clientY,\n          elem = document.elementFromPoint(x, y);\n      touchEvt$1 = evt; // IE does not seem to have native autoscroll,\n      // Edge's autoscroll seems too conditional,\n      // MACOS Safari does not have autoscroll,\n      // Firefox and Chrome are good\n\n      if (fallback || this.options.forceAutoScrollFallback || Edge || IE11OrLess || Safari) {\n        autoScroll(evt, this.options, elem, fallback); // Listener for pointer element change\n\n        var ogElemScroller = getParentAutoScrollElement(elem, true);\n\n        if (scrolling && (!pointerElemChangedInterval || x !== lastAutoScrollX || y !== lastAutoScrollY)) {\n          pointerElemChangedInterval && clearPointerElemChangedInterval(); // Detect for pointer elem change, emulating native DnD behaviour\n\n          pointerElemChangedInterval = setInterval(function () {\n            var newElem = getParentAutoScrollElement(document.elementFromPoint(x, y), true);\n\n            if (newElem !== ogElemScroller) {\n              ogElemScroller = newElem;\n              clearAutoScrolls();\n            }\n\n            autoScroll(evt, _this.options, newElem, fallback);\n          }, 10);\n          lastAutoScrollX = x;\n          lastAutoScrollY = y;\n        }\n      } else {\n        // if DnD is enabled (and browser has good autoscrolling), first autoscroll will already scroll, so get parent autoscroll of first autoscroll\n        if (!this.options.bubbleScroll || getParentAutoScrollElement(elem, true) === getWindowScrollingElement()) {\n          clearAutoScrolls();\n          return;\n        }\n\n        autoScroll(evt, this.options, getParentAutoScrollElement(elem, false), false);\n      }\n    }\n  };\n  return _extends(AutoScroll, {\n    pluginName: 'scroll',\n    initializeByDefault: true\n  });\n}\n\nfunction clearAutoScrolls() {\n  autoScrolls.forEach(function (autoScroll) {\n    clearInterval(autoScroll.pid);\n  });\n  autoScrolls = [];\n}\n\nfunction clearPointerElemChangedInterval() {\n  clearInterval(pointerElemChangedInterval);\n}\n\nvar autoScroll = throttle(function (evt, options, rootEl, isFallback) {\n  // Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521\n  if (!options.scroll) return;\n  var x = (evt.touches ? evt.touches[0] : evt).clientX,\n      y = (evt.touches ? evt.touches[0] : evt).clientY,\n      sens = options.scrollSensitivity,\n      speed = options.scrollSpeed,\n      winScroller = getWindowScrollingElement();\n  var scrollThisInstance = false,\n      scrollCustomFn; // New scroll root, set scrollEl\n\n  if (scrollRootEl !== rootEl) {\n    scrollRootEl = rootEl;\n    clearAutoScrolls();\n    scrollEl = options.scroll;\n    scrollCustomFn = options.scrollFn;\n\n    if (scrollEl === true) {\n      scrollEl = getParentAutoScrollElement(rootEl, true);\n    }\n  }\n\n  var layersOut = 0;\n  var currentParent = scrollEl;\n\n  do {\n    var el = currentParent,\n        rect = getRect(el),\n        top = rect.top,\n        bottom = rect.bottom,\n        left = rect.left,\n        right = rect.right,\n        width = rect.width,\n        height = rect.height,\n        canScrollX = void 0,\n        canScrollY = void 0,\n        scrollWidth = el.scrollWidth,\n        scrollHeight = el.scrollHeight,\n        elCSS = css(el),\n        scrollPosX = el.scrollLeft,\n        scrollPosY = el.scrollTop;\n\n    if (el === winScroller) {\n      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll' || elCSS.overflowX === 'visible');\n      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll' || elCSS.overflowY === 'visible');\n    } else {\n      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll');\n      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll');\n    }\n\n    var vx = canScrollX && (Math.abs(right - x) <= sens && scrollPosX + width < scrollWidth) - (Math.abs(left - x) <= sens && !!scrollPosX);\n    var vy = canScrollY && (Math.abs(bottom - y) <= sens && scrollPosY + height < scrollHeight) - (Math.abs(top - y) <= sens && !!scrollPosY);\n\n    if (!autoScrolls[layersOut]) {\n      for (var i = 0; i <= layersOut; i++) {\n        if (!autoScrolls[i]) {\n          autoScrolls[i] = {};\n        }\n      }\n    }\n\n    if (autoScrolls[layersOut].vx != vx || autoScrolls[layersOut].vy != vy || autoScrolls[layersOut].el !== el) {\n      autoScrolls[layersOut].el = el;\n      autoScrolls[layersOut].vx = vx;\n      autoScrolls[layersOut].vy = vy;\n      clearInterval(autoScrolls[layersOut].pid);\n\n      if (vx != 0 || vy != 0) {\n        scrollThisInstance = true;\n        /* jshint loopfunc:true */\n\n        autoScrolls[layersOut].pid = setInterval(function () {\n          // emulate drag over during autoscroll (fallback), emulating native DnD behaviour\n          if (isFallback && this.layer === 0) {\n            Sortable.active._onTouchMove(touchEvt$1); // To move ghost if it is positioned absolutely\n\n          }\n\n          var scrollOffsetY = autoScrolls[this.layer].vy ? autoScrolls[this.layer].vy * speed : 0;\n          var scrollOffsetX = autoScrolls[this.layer].vx ? autoScrolls[this.layer].vx * speed : 0;\n\n          if (typeof scrollCustomFn === 'function') {\n            if (scrollCustomFn.call(Sortable.dragged.parentNode[expando], scrollOffsetX, scrollOffsetY, evt, touchEvt$1, autoScrolls[this.layer].el) !== 'continue') {\n              return;\n            }\n          }\n\n          scrollBy(autoScrolls[this.layer].el, scrollOffsetX, scrollOffsetY);\n        }.bind({\n          layer: layersOut\n        }), 24);\n      }\n    }\n\n    layersOut++;\n  } while (options.bubbleScroll && currentParent !== winScroller && (currentParent = getParentAutoScrollElement(currentParent, false)));\n\n  scrolling = scrollThisInstance; // in case another function catches scrolling as false in between when it is not\n}, 30);\n\nvar drop = function drop(_ref) {\n  var originalEvent = _ref.originalEvent,\n      putSortable = _ref.putSortable,\n      dragEl = _ref.dragEl,\n      activeSortable = _ref.activeSortable,\n      dispatchSortableEvent = _ref.dispatchSortableEvent,\n      hideGhostForTarget = _ref.hideGhostForTarget,\n      unhideGhostForTarget = _ref.unhideGhostForTarget;\n  if (!originalEvent) return;\n  var toSortable = putSortable || activeSortable;\n  hideGhostForTarget();\n  var touch = originalEvent.changedTouches && originalEvent.changedTouches.length ? originalEvent.changedTouches[0] : originalEvent;\n  var target = document.elementFromPoint(touch.clientX, touch.clientY);\n  unhideGhostForTarget();\n\n  if (toSortable && !toSortable.el.contains(target)) {\n    dispatchSortableEvent('spill');\n    this.onSpill({\n      dragEl: dragEl,\n      putSortable: putSortable\n    });\n  }\n};\n\nfunction Revert() {}\n\nRevert.prototype = {\n  startIndex: null,\n  dragStart: function dragStart(_ref2) {\n    var oldDraggableIndex = _ref2.oldDraggableIndex;\n    this.startIndex = oldDraggableIndex;\n  },\n  onSpill: function onSpill(_ref3) {\n    var dragEl = _ref3.dragEl,\n        putSortable = _ref3.putSortable;\n    this.sortable.captureAnimationState();\n\n    if (putSortable) {\n      putSortable.captureAnimationState();\n    }\n\n    var nextSibling = getChild(this.sortable.el, this.startIndex, this.options);\n\n    if (nextSibling) {\n      this.sortable.el.insertBefore(dragEl, nextSibling);\n    } else {\n      this.sortable.el.appendChild(dragEl);\n    }\n\n    this.sortable.animateAll();\n\n    if (putSortable) {\n      putSortable.animateAll();\n    }\n  },\n  drop: drop\n};\n\n_extends(Revert, {\n  pluginName: 'revertOnSpill'\n});\n\nfunction Remove() {}\n\nRemove.prototype = {\n  onSpill: function onSpill(_ref4) {\n    var dragEl = _ref4.dragEl,\n        putSortable = _ref4.putSortable;\n    var parentSortable = putSortable || this.sortable;\n    parentSortable.captureAnimationState();\n    dragEl.parentNode && dragEl.parentNode.removeChild(dragEl);\n    parentSortable.animateAll();\n  },\n  drop: drop\n};\n\n_extends(Remove, {\n  pluginName: 'removeOnSpill'\n});\n\nvar lastSwapEl;\n\nfunction SwapPlugin() {\n  function Swap() {\n    this.defaults = {\n      swapClass: 'sortable-swap-highlight'\n    };\n  }\n\n  Swap.prototype = {\n    dragStart: function dragStart(_ref) {\n      var dragEl = _ref.dragEl;\n      lastSwapEl = dragEl;\n    },\n    dragOverValid: function dragOverValid(_ref2) {\n      var completed = _ref2.completed,\n          target = _ref2.target,\n          onMove = _ref2.onMove,\n          activeSortable = _ref2.activeSortable,\n          changed = _ref2.changed,\n          cancel = _ref2.cancel;\n      if (!activeSortable.options.swap) return;\n      var el = this.sortable.el,\n          options = this.options;\n\n      if (target && target !== el) {\n        var prevSwapEl = lastSwapEl;\n\n        if (onMove(target) !== false) {\n          toggleClass(target, options.swapClass, true);\n          lastSwapEl = target;\n        } else {\n          lastSwapEl = null;\n        }\n\n        if (prevSwapEl && prevSwapEl !== lastSwapEl) {\n          toggleClass(prevSwapEl, options.swapClass, false);\n        }\n      }\n\n      changed();\n      completed(true);\n      cancel();\n    },\n    drop: function drop(_ref3) {\n      var activeSortable = _ref3.activeSortable,\n          putSortable = _ref3.putSortable,\n          dragEl = _ref3.dragEl;\n      var toSortable = putSortable || this.sortable;\n      var options = this.options;\n      lastSwapEl && toggleClass(lastSwapEl, options.swapClass, false);\n\n      if (lastSwapEl && (options.swap || putSortable && putSortable.options.swap)) {\n        if (dragEl !== lastSwapEl) {\n          toSortable.captureAnimationState();\n          if (toSortable !== activeSortable) activeSortable.captureAnimationState();\n          swapNodes(dragEl, lastSwapEl);\n          toSortable.animateAll();\n          if (toSortable !== activeSortable) activeSortable.animateAll();\n        }\n      }\n    },\n    nulling: function nulling() {\n      lastSwapEl = null;\n    }\n  };\n  return _extends(Swap, {\n    pluginName: 'swap',\n    eventProperties: function eventProperties() {\n      return {\n        swapItem: lastSwapEl\n      };\n    }\n  });\n}\n\nfunction swapNodes(n1, n2) {\n  var p1 = n1.parentNode,\n      p2 = n2.parentNode,\n      i1,\n      i2;\n  if (!p1 || !p2 || p1.isEqualNode(n2) || p2.isEqualNode(n1)) return;\n  i1 = index(n1);\n  i2 = index(n2);\n\n  if (p1.isEqualNode(p2) && i1 < i2) {\n    i2++;\n  }\n\n  p1.insertBefore(n2, p1.children[i1]);\n  p2.insertBefore(n1, p2.children[i2]);\n}\n\nvar multiDragElements = [],\n    multiDragClones = [],\n    lastMultiDragSelect,\n    // for selection with modifier key down (SHIFT)\nmultiDragSortable,\n    initialFolding = false,\n    // Initial multi-drag fold when drag started\nfolding = false,\n    // Folding any other time\ndragStarted = false,\n    dragEl$1,\n    clonesFromRect,\n    clonesHidden;\n\nfunction MultiDragPlugin() {\n  function MultiDrag(sortable) {\n    // Bind all private methods\n    for (var fn in this) {\n      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n        this[fn] = this[fn].bind(this);\n      }\n    }\n\n    if (!sortable.options.avoidImplicitDeselect) {\n      if (sortable.options.supportPointer) {\n        on(document, 'pointerup', this._deselectMultiDrag);\n      } else {\n        on(document, 'mouseup', this._deselectMultiDrag);\n        on(document, 'touchend', this._deselectMultiDrag);\n      }\n    }\n\n    on(document, 'keydown', this._checkKeyDown);\n    on(document, 'keyup', this._checkKeyUp);\n    this.defaults = {\n      selectedClass: 'sortable-selected',\n      multiDragKey: null,\n      avoidImplicitDeselect: false,\n      setData: function setData(dataTransfer, dragEl) {\n        var data = '';\n\n        if (multiDragElements.length && multiDragSortable === sortable) {\n          multiDragElements.forEach(function (multiDragElement, i) {\n            data += (!i ? '' : ', ') + multiDragElement.textContent;\n          });\n        } else {\n          data = dragEl.textContent;\n        }\n\n        dataTransfer.setData('Text', data);\n      }\n    };\n  }\n\n  MultiDrag.prototype = {\n    multiDragKeyDown: false,\n    isMultiDrag: false,\n    delayStartGlobal: function delayStartGlobal(_ref) {\n      var dragged = _ref.dragEl;\n      dragEl$1 = dragged;\n    },\n    delayEnded: function delayEnded() {\n      this.isMultiDrag = ~multiDragElements.indexOf(dragEl$1);\n    },\n    setupClone: function setupClone(_ref2) {\n      var sortable = _ref2.sortable,\n          cancel = _ref2.cancel;\n      if (!this.isMultiDrag) return;\n\n      for (var i = 0; i < multiDragElements.length; i++) {\n        multiDragClones.push(clone(multiDragElements[i]));\n        multiDragClones[i].sortableIndex = multiDragElements[i].sortableIndex;\n        multiDragClones[i].draggable = false;\n        multiDragClones[i].style['will-change'] = '';\n        toggleClass(multiDragClones[i], this.options.selectedClass, false);\n        multiDragElements[i] === dragEl$1 && toggleClass(multiDragClones[i], this.options.chosenClass, false);\n      }\n\n      sortable._hideClone();\n\n      cancel();\n    },\n    clone: function clone(_ref3) {\n      var sortable = _ref3.sortable,\n          rootEl = _ref3.rootEl,\n          dispatchSortableEvent = _ref3.dispatchSortableEvent,\n          cancel = _ref3.cancel;\n      if (!this.isMultiDrag) return;\n\n      if (!this.options.removeCloneOnHide) {\n        if (multiDragElements.length && multiDragSortable === sortable) {\n          insertMultiDragClones(true, rootEl);\n          dispatchSortableEvent('clone');\n          cancel();\n        }\n      }\n    },\n    showClone: function showClone(_ref4) {\n      var cloneNowShown = _ref4.cloneNowShown,\n          rootEl = _ref4.rootEl,\n          cancel = _ref4.cancel;\n      if (!this.isMultiDrag) return;\n      insertMultiDragClones(false, rootEl);\n      multiDragClones.forEach(function (clone) {\n        css(clone, 'display', '');\n      });\n      cloneNowShown();\n      clonesHidden = false;\n      cancel();\n    },\n    hideClone: function hideClone(_ref5) {\n      var _this = this;\n\n      var sortable = _ref5.sortable,\n          cloneNowHidden = _ref5.cloneNowHidden,\n          cancel = _ref5.cancel;\n      if (!this.isMultiDrag) return;\n      multiDragClones.forEach(function (clone) {\n        css(clone, 'display', 'none');\n\n        if (_this.options.removeCloneOnHide && clone.parentNode) {\n          clone.parentNode.removeChild(clone);\n        }\n      });\n      cloneNowHidden();\n      clonesHidden = true;\n      cancel();\n    },\n    dragStartGlobal: function dragStartGlobal(_ref6) {\n      var sortable = _ref6.sortable;\n\n      if (!this.isMultiDrag && multiDragSortable) {\n        multiDragSortable.multiDrag._deselectMultiDrag();\n      }\n\n      multiDragElements.forEach(function (multiDragElement) {\n        multiDragElement.sortableIndex = index(multiDragElement);\n      }); // Sort multi-drag elements\n\n      multiDragElements = multiDragElements.sort(function (a, b) {\n        return a.sortableIndex - b.sortableIndex;\n      });\n      dragStarted = true;\n    },\n    dragStarted: function dragStarted(_ref7) {\n      var _this2 = this;\n\n      var sortable = _ref7.sortable;\n      if (!this.isMultiDrag) return;\n\n      if (this.options.sort) {\n        // Capture rects,\n        // hide multi drag elements (by positioning them absolute),\n        // set multi drag elements rects to dragRect,\n        // show multi drag elements,\n        // animate to rects,\n        // unset rects & remove from DOM\n        sortable.captureAnimationState();\n\n        if (this.options.animation) {\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            css(multiDragElement, 'position', 'absolute');\n          });\n          var dragRect = getRect(dragEl$1, false, true, true);\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            setRect(multiDragElement, dragRect);\n          });\n          folding = true;\n          initialFolding = true;\n        }\n      }\n\n      sortable.animateAll(function () {\n        folding = false;\n        initialFolding = false;\n\n        if (_this2.options.animation) {\n          multiDragElements.forEach(function (multiDragElement) {\n            unsetRect(multiDragElement);\n          });\n        } // Remove all auxiliary multidrag items from el, if sorting enabled\n\n\n        if (_this2.options.sort) {\n          removeMultiDragElements();\n        }\n      });\n    },\n    dragOver: function dragOver(_ref8) {\n      var target = _ref8.target,\n          completed = _ref8.completed,\n          cancel = _ref8.cancel;\n\n      if (folding && ~multiDragElements.indexOf(target)) {\n        completed(false);\n        cancel();\n      }\n    },\n    revert: function revert(_ref9) {\n      var fromSortable = _ref9.fromSortable,\n          rootEl = _ref9.rootEl,\n          sortable = _ref9.sortable,\n          dragRect = _ref9.dragRect;\n\n      if (multiDragElements.length > 1) {\n        // Setup unfold animation\n        multiDragElements.forEach(function (multiDragElement) {\n          sortable.addAnimationState({\n            target: multiDragElement,\n            rect: folding ? getRect(multiDragElement) : dragRect\n          });\n          unsetRect(multiDragElement);\n          multiDragElement.fromRect = dragRect;\n          fromSortable.removeAnimationState(multiDragElement);\n        });\n        folding = false;\n        insertMultiDragElements(!this.options.removeCloneOnHide, rootEl);\n      }\n    },\n    dragOverCompleted: function dragOverCompleted(_ref10) {\n      var sortable = _ref10.sortable,\n          isOwner = _ref10.isOwner,\n          insertion = _ref10.insertion,\n          activeSortable = _ref10.activeSortable,\n          parentEl = _ref10.parentEl,\n          putSortable = _ref10.putSortable;\n      var options = this.options;\n\n      if (insertion) {\n        // Clones must be hidden before folding animation to capture dragRectAbsolute properly\n        if (isOwner) {\n          activeSortable._hideClone();\n        }\n\n        initialFolding = false; // If leaving sort:false root, or already folding - Fold to new location\n\n        if (options.animation && multiDragElements.length > 1 && (folding || !isOwner && !activeSortable.options.sort && !putSortable)) {\n          // Fold: Set all multi drag elements's rects to dragEl's rect when multi-drag elements are invisible\n          var dragRectAbsolute = getRect(dragEl$1, false, true, true);\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            setRect(multiDragElement, dragRectAbsolute); // Move element(s) to end of parentEl so that it does not interfere with multi-drag clones insertion if they are inserted\n            // while folding, and so that we can capture them again because old sortable will no longer be fromSortable\n\n            parentEl.appendChild(multiDragElement);\n          });\n          folding = true;\n        } // Clones must be shown (and check to remove multi drags) after folding when interfering multiDragElements are moved out\n\n\n        if (!isOwner) {\n          // Only remove if not folding (folding will remove them anyways)\n          if (!folding) {\n            removeMultiDragElements();\n          }\n\n          if (multiDragElements.length > 1) {\n            var clonesHiddenBefore = clonesHidden;\n\n            activeSortable._showClone(sortable); // Unfold animation for clones if showing from hidden\n\n\n            if (activeSortable.options.animation && !clonesHidden && clonesHiddenBefore) {\n              multiDragClones.forEach(function (clone) {\n                activeSortable.addAnimationState({\n                  target: clone,\n                  rect: clonesFromRect\n                });\n                clone.fromRect = clonesFromRect;\n                clone.thisAnimationDuration = null;\n              });\n            }\n          } else {\n            activeSortable._showClone(sortable);\n          }\n        }\n      }\n    },\n    dragOverAnimationCapture: function dragOverAnimationCapture(_ref11) {\n      var dragRect = _ref11.dragRect,\n          isOwner = _ref11.isOwner,\n          activeSortable = _ref11.activeSortable;\n      multiDragElements.forEach(function (multiDragElement) {\n        multiDragElement.thisAnimationDuration = null;\n      });\n\n      if (activeSortable.options.animation && !isOwner && activeSortable.multiDrag.isMultiDrag) {\n        clonesFromRect = _extends({}, dragRect);\n        var dragMatrix = matrix(dragEl$1, true);\n        clonesFromRect.top -= dragMatrix.f;\n        clonesFromRect.left -= dragMatrix.e;\n      }\n    },\n    dragOverAnimationComplete: function dragOverAnimationComplete() {\n      if (folding) {\n        folding = false;\n        removeMultiDragElements();\n      }\n    },\n    drop: function drop(_ref12) {\n      var evt = _ref12.originalEvent,\n          rootEl = _ref12.rootEl,\n          parentEl = _ref12.parentEl,\n          sortable = _ref12.sortable,\n          dispatchSortableEvent = _ref12.dispatchSortableEvent,\n          oldIndex = _ref12.oldIndex,\n          putSortable = _ref12.putSortable;\n      var toSortable = putSortable || this.sortable;\n      if (!evt) return;\n      var options = this.options,\n          children = parentEl.children; // Multi-drag selection\n\n      if (!dragStarted) {\n        if (options.multiDragKey && !this.multiDragKeyDown) {\n          this._deselectMultiDrag();\n        }\n\n        toggleClass(dragEl$1, options.selectedClass, !~multiDragElements.indexOf(dragEl$1));\n\n        if (!~multiDragElements.indexOf(dragEl$1)) {\n          multiDragElements.push(dragEl$1);\n          dispatchEvent({\n            sortable: sortable,\n            rootEl: rootEl,\n            name: 'select',\n            targetEl: dragEl$1,\n            originalEvent: evt\n          }); // Modifier activated, select from last to dragEl\n\n          if (evt.shiftKey && lastMultiDragSelect && sortable.el.contains(lastMultiDragSelect)) {\n            var lastIndex = index(lastMultiDragSelect),\n                currentIndex = index(dragEl$1);\n\n            if (~lastIndex && ~currentIndex && lastIndex !== currentIndex) {\n              // Must include lastMultiDragSelect (select it), in case modified selection from no selection\n              // (but previous selection existed)\n              var n, i;\n\n              if (currentIndex > lastIndex) {\n                i = lastIndex;\n                n = currentIndex;\n              } else {\n                i = currentIndex;\n                n = lastIndex + 1;\n              }\n\n              for (; i < n; i++) {\n                if (~multiDragElements.indexOf(children[i])) continue;\n                toggleClass(children[i], options.selectedClass, true);\n                multiDragElements.push(children[i]);\n                dispatchEvent({\n                  sortable: sortable,\n                  rootEl: rootEl,\n                  name: 'select',\n                  targetEl: children[i],\n                  originalEvent: evt\n                });\n              }\n            }\n          } else {\n            lastMultiDragSelect = dragEl$1;\n          }\n\n          multiDragSortable = toSortable;\n        } else {\n          multiDragElements.splice(multiDragElements.indexOf(dragEl$1), 1);\n          lastMultiDragSelect = null;\n          dispatchEvent({\n            sortable: sortable,\n            rootEl: rootEl,\n            name: 'deselect',\n            targetEl: dragEl$1,\n            originalEvent: evt\n          });\n        }\n      } // Multi-drag drop\n\n\n      if (dragStarted && this.isMultiDrag) {\n        folding = false; // Do not \"unfold\" after around dragEl if reverted\n\n        if ((parentEl[expando].options.sort || parentEl !== rootEl) && multiDragElements.length > 1) {\n          var dragRect = getRect(dragEl$1),\n              multiDragIndex = index(dragEl$1, ':not(.' + this.options.selectedClass + ')');\n          if (!initialFolding && options.animation) dragEl$1.thisAnimationDuration = null;\n          toSortable.captureAnimationState();\n\n          if (!initialFolding) {\n            if (options.animation) {\n              dragEl$1.fromRect = dragRect;\n              multiDragElements.forEach(function (multiDragElement) {\n                multiDragElement.thisAnimationDuration = null;\n\n                if (multiDragElement !== dragEl$1) {\n                  var rect = folding ? getRect(multiDragElement) : dragRect;\n                  multiDragElement.fromRect = rect; // Prepare unfold animation\n\n                  toSortable.addAnimationState({\n                    target: multiDragElement,\n                    rect: rect\n                  });\n                }\n              });\n            } // Multi drag elements are not necessarily removed from the DOM on drop, so to reinsert\n            // properly they must all be removed\n\n\n            removeMultiDragElements();\n            multiDragElements.forEach(function (multiDragElement) {\n              if (children[multiDragIndex]) {\n                parentEl.insertBefore(multiDragElement, children[multiDragIndex]);\n              } else {\n                parentEl.appendChild(multiDragElement);\n              }\n\n              multiDragIndex++;\n            }); // If initial folding is done, the elements may have changed position because they are now\n            // unfolding around dragEl, even though dragEl may not have his index changed, so update event\n            // must be fired here as Sortable will not.\n\n            if (oldIndex === index(dragEl$1)) {\n              var update = false;\n              multiDragElements.forEach(function (multiDragElement) {\n                if (multiDragElement.sortableIndex !== index(multiDragElement)) {\n                  update = true;\n                  return;\n                }\n              });\n\n              if (update) {\n                dispatchSortableEvent('update');\n              }\n            }\n          } // Must be done after capturing individual rects (scroll bar)\n\n\n          multiDragElements.forEach(function (multiDragElement) {\n            unsetRect(multiDragElement);\n          });\n          toSortable.animateAll();\n        }\n\n        multiDragSortable = toSortable;\n      } // Remove clones if necessary\n\n\n      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {\n        multiDragClones.forEach(function (clone) {\n          clone.parentNode && clone.parentNode.removeChild(clone);\n        });\n      }\n    },\n    nullingGlobal: function nullingGlobal() {\n      this.isMultiDrag = dragStarted = false;\n      multiDragClones.length = 0;\n    },\n    destroyGlobal: function destroyGlobal() {\n      this._deselectMultiDrag();\n\n      off(document, 'pointerup', this._deselectMultiDrag);\n      off(document, 'mouseup', this._deselectMultiDrag);\n      off(document, 'touchend', this._deselectMultiDrag);\n      off(document, 'keydown', this._checkKeyDown);\n      off(document, 'keyup', this._checkKeyUp);\n    },\n    _deselectMultiDrag: function _deselectMultiDrag(evt) {\n      if (typeof dragStarted !== \"undefined\" && dragStarted) return; // Only deselect if selection is in this sortable\n\n      if (multiDragSortable !== this.sortable) return; // Only deselect if target is not item in this sortable\n\n      if (evt && closest(evt.target, this.options.draggable, this.sortable.el, false)) return; // Only deselect if left click\n\n      if (evt && evt.button !== 0) return;\n\n      while (multiDragElements.length) {\n        var el = multiDragElements[0];\n        toggleClass(el, this.options.selectedClass, false);\n        multiDragElements.shift();\n        dispatchEvent({\n          sortable: this.sortable,\n          rootEl: this.sortable.el,\n          name: 'deselect',\n          targetEl: el,\n          originalEvent: evt\n        });\n      }\n    },\n    _checkKeyDown: function _checkKeyDown(evt) {\n      if (evt.key === this.options.multiDragKey) {\n        this.multiDragKeyDown = true;\n      }\n    },\n    _checkKeyUp: function _checkKeyUp(evt) {\n      if (evt.key === this.options.multiDragKey) {\n        this.multiDragKeyDown = false;\n      }\n    }\n  };\n  return _extends(MultiDrag, {\n    // Static methods & properties\n    pluginName: 'multiDrag',\n    utils: {\n      /**\r\n       * Selects the provided multi-drag item\r\n       * @param  {HTMLElement} el    The element to be selected\r\n       */\n      select: function select(el) {\n        var sortable = el.parentNode[expando];\n        if (!sortable || !sortable.options.multiDrag || ~multiDragElements.indexOf(el)) return;\n\n        if (multiDragSortable && multiDragSortable !== sortable) {\n          multiDragSortable.multiDrag._deselectMultiDrag();\n\n          multiDragSortable = sortable;\n        }\n\n        toggleClass(el, sortable.options.selectedClass, true);\n        multiDragElements.push(el);\n      },\n\n      /**\r\n       * Deselects the provided multi-drag item\r\n       * @param  {HTMLElement} el    The element to be deselected\r\n       */\n      deselect: function deselect(el) {\n        var sortable = el.parentNode[expando],\n            index = multiDragElements.indexOf(el);\n        if (!sortable || !sortable.options.multiDrag || !~index) return;\n        toggleClass(el, sortable.options.selectedClass, false);\n        multiDragElements.splice(index, 1);\n      }\n    },\n    eventProperties: function eventProperties() {\n      var _this3 = this;\n\n      var oldIndicies = [],\n          newIndicies = [];\n      multiDragElements.forEach(function (multiDragElement) {\n        oldIndicies.push({\n          multiDragElement: multiDragElement,\n          index: multiDragElement.sortableIndex\n        }); // multiDragElements will already be sorted if folding\n\n        var newIndex;\n\n        if (folding && multiDragElement !== dragEl$1) {\n          newIndex = -1;\n        } else if (folding) {\n          newIndex = index(multiDragElement, ':not(.' + _this3.options.selectedClass + ')');\n        } else {\n          newIndex = index(multiDragElement);\n        }\n\n        newIndicies.push({\n          multiDragElement: multiDragElement,\n          index: newIndex\n        });\n      });\n      return {\n        items: _toConsumableArray(multiDragElements),\n        clones: [].concat(multiDragClones),\n        oldIndicies: oldIndicies,\n        newIndicies: newIndicies\n      };\n    },\n    optionListeners: {\n      multiDragKey: function multiDragKey(key) {\n        key = key.toLowerCase();\n\n        if (key === 'ctrl') {\n          key = 'Control';\n        } else if (key.length > 1) {\n          key = key.charAt(0).toUpperCase() + key.substr(1);\n        }\n\n        return key;\n      }\n    }\n  });\n}\n\nfunction insertMultiDragElements(clonesInserted, rootEl) {\n  multiDragElements.forEach(function (multiDragElement, i) {\n    var target = rootEl.children[multiDragElement.sortableIndex + (clonesInserted ? Number(i) : 0)];\n\n    if (target) {\n      rootEl.insertBefore(multiDragElement, target);\n    } else {\n      rootEl.appendChild(multiDragElement);\n    }\n  });\n}\n/**\r\n * Insert multi-drag clones\r\n * @param  {[Boolean]} elementsInserted  Whether the multi-drag elements are inserted\r\n * @param  {HTMLElement} rootEl\r\n */\n\n\nfunction insertMultiDragClones(elementsInserted, rootEl) {\n  multiDragClones.forEach(function (clone, i) {\n    var target = rootEl.children[clone.sortableIndex + (elementsInserted ? Number(i) : 0)];\n\n    if (target) {\n      rootEl.insertBefore(clone, target);\n    } else {\n      rootEl.appendChild(clone);\n    }\n  });\n}\n\nfunction removeMultiDragElements() {\n  multiDragElements.forEach(function (multiDragElement) {\n    if (multiDragElement === dragEl$1) return;\n    multiDragElement.parentNode && multiDragElement.parentNode.removeChild(multiDragElement);\n  });\n}\n\nSortable.mount(new AutoScrollPlugin());\nSortable.mount(Remove, Revert);\n\nexport default Sortable;\nexport { MultiDragPlugin as MultiDrag, Sortable, SwapPlugin as Swap };\n", "import Sortable, { MoveEvent, MultiDrag, SortableEvent } from 'sortablejs';\n\nSortable.mount(new MultiDrag());\n\nclass ListSortable {\n\tprivate readonly tableBody: HTMLTableSectionElement;\n\tprivate readonly config: any;\n\tprivate readonly sortable: Sortable;\n\tprivate readonly observer: MutationObserver;\n\tprivate firstOrder: number | undefined;\n\tprivate orderDirection: number | undefined;\n\n\tconstructor(table: HTMLTableElement, config: any) {\n\t\tthis.tableBody = table.querySelector('tbody')!;\n\t\tthis.config = config;\n\t\tthis.sortable = Sortable.create(this.tableBody, {\n\t\t\tanimation: 150,\n\t\t\thandle: '.handle',\n\t\t\tdraggable: 'tr',\n\t\t\tselectedClass: 'selected',\n\t\t\tmultiDrag: true,\n\t\t\tonStart: event => this.onStart(event),\n\t\t\tonEnd: event => this.onEnd(event),\n\t\t});\n\t\tthis.observer = new MutationObserver(mutationsList => this.selectActionChanged(mutationsList));\n\t\tconst tableRows = this.tableBody.querySelectorAll('tr');\n\t\ttableRows.forEach(tableRow => this.observer.observe(tableRow, {attributes: true}));\n\t}\n\n\tprivate selectActionChanged(mutationsList: Array<MutationRecord>) {\n\t\tfor (const mutation of mutationsList) {\n\t\t\tif (mutation.type === 'attributes' && mutation.attributeName === 'class') {\n\t\t\t\tconst tableRow = mutation.target as HTMLTableRowElement;\n\t\t\t\tif (tableRow.classList.contains('selected')) {\n\t\t\t\t\tSortable.utils.select(tableRow);\n\t\t\t\t} else {\n\t\t\t\t\tSortable.utils.deselect(tableRow);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async onStart(evt: SortableEvent) {\n\t\tevt.oldIndex;  // element index within parent\n\t\tconst firstOrder = this.tableBody.querySelector('tr:first-child')?.querySelector('.handle')?.getAttribute('order');\n\t\tconst lastOrder = this.tableBody.querySelector('tr:last-child')?.querySelector('.handle')?.getAttribute('order');\n\t\tif (firstOrder && lastOrder) {\n\t\t\tthis.firstOrder = parseInt(firstOrder);\n\t\t\tthis.orderDirection = parseInt(lastOrder) > this.firstOrder ? 1 : -1;\n\t\t}\n\t}\n\n\tprivate async onEnd(evt: SortableEvent) {\n\t\tif (typeof evt.newIndex !== 'number' || typeof evt.oldIndex !== 'number'\n\t\t\t|| typeof this.firstOrder !== 'number'|| typeof this.orderDirection !== 'number'\n\t\t\t|| !(evt.item instanceof HTMLTableRowElement))\n\t\t\treturn;\n\n\t\tlet firstChild: number, lastChild: number;\n\t\tif (evt.items.length === 0) {\n\t\t\t// single dragged item\n\t\t\tif (evt.newIndex < evt.oldIndex) {\n\t\t\t\t// drag up\n\t\t\t\tfirstChild = evt.newIndex;\n\t\t\t\tlastChild = evt.oldIndex;\n\t\t\t} else if (evt.newIndex > evt.oldIndex) {\n\t\t\t\t// drag down\n\t\t\t\tfirstChild = evt.oldIndex;\n\t\t\t\tlastChild = evt.newIndex;\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\t// multiple dragged items\n\t\t\tfirstChild = this.tableBody.querySelectorAll('tr').length;\n\t\t\tlastChild = 0;\n\t\t\tevt.oldIndicies.forEach(item => {\n\t\t\t\tfirstChild = Math.min(firstChild, item.index)\n\t\t\t\tlastChild = Math.max(lastChild, item.index)\n\t\t\t});\n\t\t\tevt.newIndicies.forEach(item => {\n\t\t\t\tfirstChild = Math.min(firstChild, item.index)\n\t\t\t\tlastChild = Math.max(lastChild, item.index)\n\t\t\t});\n\t\t}\n\n\t\tconst updatedRows = this.tableBody.querySelectorAll(`tr:nth-child(n+${firstChild + 1}):nth-child(-n+${lastChild + 1})`);\n\t\tif (updatedRows.length === 0)\n\t\t\treturn;\n\n\t\tlet order;\n\t\tif (firstChild === 0) {\n\t\t\torder = this.firstOrder;\n\t\t} else {\n\t\t\torder = this.tableBody.querySelector(`tr:nth-child(${firstChild}) .handle`)?.getAttribute('order');\n\t\t\tif (!order)\n\t\t\t\treturn;\n\t\t\torder = parseInt(order) + this.orderDirection;\n\t\t}\n \t\tconst updatedItems = new Map<string, number>();\n\t\tfor (let row of updatedRows) {\n\t\t\tconst pk = row.querySelector('.handle')?.getAttribute('pk');\n\t\t\tif (pk) {\n\t\t\t\trow.querySelector('.handle')?.setAttribute('order', String(order));\n\t\t\t\tupdatedItems.set(pk, order);\n\t\t\t\torder += this.orderDirection;\n\t\t\t}\n\t\t}\n\n\t\tconst response = await fetch(this.config.update_url, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: this.headers,\n\t\t\tbody: JSON.stringify({\n\t\t\t\tupdatedItems: Array.from(updatedItems.entries()),\n\t\t\t})\n\t\t});\n\t\tif (response.status === 200) {\n\t\t\tthis.resetActions();\n\t\t} else {\n\t\t\tconsole.error(`The server responded: ${response.statusText}`);\n\t\t}\n\t}\n\n\tprivate resetActions() {\n\t\t// reset default action checkboxes behaviour\n\t\tif (!window.hasOwnProperty('Actions'))\n\t\t\treturn;\n\t\tconst actionsEls = this.tableBody.querySelectorAll('tr input.action-select');\n\t\tactionsEls.forEach(elem => {\n\t\t\tconst tableRow = elem.closest('tr');\n\t\t\t// @ts-ignore\n\t\t\tSortable.utils.deselect(tableRow);\n\t\t\ttableRow?.classList.remove('selected');\n\t\t\t(elem as HTMLInputElement).checked = false;\n\t\t});\n\t\tconst elem = document.getElementById('action-toggle');\n\t\tif (elem instanceof HTMLInputElement) {\n\t\t\telem.checked = false;\n\t\t}\n\t\t// @ts-ignore\n\t\twindow.Actions(actionsEls);\n\t}\n\n\tpublic get headers(): Headers {\n\t\tconst headers = new Headers();\n\t\theaders.append('Accept', 'application/json');\n\t\theaders.append('Content-Type', 'application/json');\n\n\t\tconst inputElement = this.tableBody.closest('form')?.querySelector('input[name=\"csrfmiddlewaretoken\"]') as HTMLInputElement;\n\t\tif (inputElement) {\n\t\t\theaders.append('X-CSRFToken', inputElement.value);\n\t\t}\n\t\treturn headers;\n\t}\n}\n\n\nclass ActionForm {\n\tprivate readonly selectElement: HTMLSelectElement;\n\tprivate readonly config: any;\n\tprivate readonly stepInput: HTMLInputElement;\n\tprivate readonly pageInput: HTMLInputElement;\n\n\tconstructor(formElement: HTMLElement, config: any) {\n\t\tformElement.setAttribute('novalidate', 'novalidate');\n\t\tthis.selectElement = formElement.querySelector('select[name=\"action\"]')!;\n\t\tthis.config = config;\n\t\tthis.selectElement.addEventListener('change', () => this.actionChanged());\n\n\t\tthis.stepInput = document.getElementById('changelist-form-step') as HTMLInputElement;\n\t\tthis.stepInput.setAttribute('min', '1');\n\t\tconst max = Math.max(this.config.total_pages - this.config.current_page, this.config.current_page);\n\t\tthis.stepInput.setAttribute('max', `${max}`);\n\t\tthis.stepInput.value = '1';\n\n\t\tthis.pageInput = document.getElementById('changelist-form-page') as HTMLInputElement;\n\t\tthis.pageInput.setAttribute('min', '1');\n\t\tthis.pageInput.setAttribute('max', `${this.config.total_pages}`);\n\t\tthis.pageInput.value = `${this.config.current_page}`;\n\t}\n\n\tprivate actionChanged() {\n\t\tthis.pageInput.style.display = this.stepInput.style.display = 'none';\n\t\tswitch (this.selectElement?.value) {\n\t\t\tcase 'move_to_exact_page':\n\t\t\t\tthis.pageInput.style.display = 'inline-block';\n\t\t\t\tbreak;\n\t\t\tcase 'move_to_forward_page':\n\t\t\t\tthis.stepInput.style.display = 'inline-block';\n\t\t\t\tbreak;\n\t\t\tcase 'move_to_back_page':\n\t\t\t\tthis.stepInput.style.display = 'inline-block';\n\t\t\t\tbreak;\n\t\t\tcase 'move_to_first_page':\n\t\t\t\tthis.pageInput.value = '1';\n\t\t\t\tbreak;\n\t\t\tcase 'move_to_last_page':\n\t\t\t\tthis.pageInput.value = `${this.config.total_pages + 1}`;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n\n\nclass InlineSortable {\n\tprivate readonly sortable: Sortable;\n\tprivate readonly reversed: boolean;\n\tprivate readonly itemSelectors: string;\n\n\tconstructor(inlineFieldSet: HTMLFieldSetElement) {\n\t\tthis.reversed = inlineFieldSet.classList.contains('reversed');\n\t\tconst tBody = inlineFieldSet.querySelector('table tbody') as HTMLTableSectionElement;\n\t\tif (tBody) {\n\t\t\t// tabular inline\n\t\t\tthis.itemSelectors = 'tr.has_original'\n\t\t\tthis.sortable = Sortable.create(tBody, {\n\t\t\t\tanimation: 150,\n\t\t\t\thandle: 'td.original p',\n\t\t\t\tdraggable: 'tr',\n\t\t\t\tonEnd: event => this.onEnd(),\n\t\t\t\tonMove: event => this.onMove(event),\n\t\t\t});\n\t\t} else {\n\t\t\t// stacked inline\n\t\t\tthis.itemSelectors = '.inline-related.has_original'\n\t\t\tthis.sortable = Sortable.create(inlineFieldSet, {\n\t\t\t\tanimation: 150,\n\t\t\t\thandle: 'h3',\n\t\t\t\tdraggable: '.inline-related.has_original',\n\t\t\t\tonEnd: event => this.onEnd(),\n\t\t\t});\n\t\t}\n\t\tinlineFieldSet.querySelectorAll('.inline-related .sort i.move-begin').forEach(\n\t\t\telem => elem.addEventListener('click', event => this.move(event.target, 'begin'))\n\t\t);\n\t\tinlineFieldSet.querySelectorAll('.inline-related .sort i.move-end').forEach(\n\t\t\telem => elem.addEventListener('click', event => this.move(event.target, 'end'))\n\t\t);\n\t}\n\n\tprivate onEnd() {\n\t\tconst originals = this.sortable.el.querySelectorAll(this.itemSelectors);\n\t\tif (this.reversed) {\n\t\t\toriginals.forEach((element: Element, index: number) => {\n\t\t\t\tconst reorderInputElement = element.querySelector('input._reorder_') as HTMLInputElement;\n\t\t\t\treorderInputElement.value = `${originals.length - index}`;\n\t\t\t});\n\t\t} else {\n\t\t\toriginals.forEach((element: Element, index: number) => {\n\t\t\t\tconst reorderInputElement = element.querySelector('input._reorder_') as HTMLInputElement;\n\t\t\t\treorderInputElement.value = `${index + 1}`;\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate onMove(event: MoveEvent) {\n\t\treturn event.related.classList.contains(\"has_original\");\n\t}\n\n\tprivate move(target: EventTarget | null, direction: 'begin' | 'end') {\n\t\tif (!(target instanceof HTMLElement))\n\t\t\treturn;\n\t\tconst inlineRelated = target.closest(this.itemSelectors);\n\t\tif (!inlineRelated)\n\t\t\treturn;\n\t\tconst inlineRelatedList = this.sortable.el.querySelectorAll(this.itemSelectors);\n\t\tif (inlineRelatedList.length < 2)\n\t\t\treturn;\n\t\tif (direction === 'begin') {\n\t\t\tinlineRelatedList[0].insertAdjacentElement('beforebegin', inlineRelated);\n\t\t} else {\n\t\t\tinlineRelatedList[inlineRelatedList.length - 1].insertAdjacentElement('afterend', inlineRelated);\n\t\t}\n\t\tthis.onEnd();\n\t}\n}\n\n\nwindow.addEventListener('load', (event) => {\n\tconst configElem = document.getElementById('admin_sortable2_config');\n\tif (configElem instanceof HTMLScriptElement && configElem.textContent) {\n\t\tconst adminSortableConfig = JSON.parse(configElem.textContent);\n\n\t\tconst table = document.getElementById('result_list');\n\t\tif (table instanceof HTMLTableElement) {\n\t\t\tnew ListSortable(table, adminSortableConfig);\n\t\t}\n\n\t\tconst changelistForm = document.getElementById('changelist-form');\n\t\tif (changelistForm) {\n\t\t\tnew ActionForm(changelistForm, adminSortableConfig);\n\t\t}\n\t}\n\n\tfor (let inlineFieldSet of document.querySelectorAll('fieldset.sortable')) {\n\t\tnew InlineSortable(inlineFieldSet as HTMLFieldSetElement);\n\t}\n});\n"],
  "mappings": "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",
  "names": []
}
